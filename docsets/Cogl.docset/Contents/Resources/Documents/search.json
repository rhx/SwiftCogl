{"Typealiases.html#/s:4Cogl7FuncPtra":{"name":"FuncPtr","abstract":"<p>The type used by cogl for function pointers, note that this type"},"Typealiases.html#/s:4Cogl5Anglea":{"name":"Angle","abstract":"<p>Integer representation of an angle such that 1024 corresponds to"},"Typealiases.html#/s:4Cogl5Bool_a":{"name":"Bool_","abstract":"<p>A boolean data type used throughout the Cogl C api. This should be"},"Typealiases.html#/s:4Cogl6Handlea":{"name":"Handle","abstract":"<p>Type used for storing references to cogl objects, the CoglHandle is"},"Typealiases.html#/s:4Cogl13AttributeTypea":{"name":"AttributeType","abstract":"<p>Data types for the components of a vertex attribute.</p>"},"Typealiases.html#/s:4Cogl11BitmapErrora":{"name":"BitmapError","abstract":"<p>Error codes that can be thrown when performing bitmap"},"Typealiases.html#/s:4Cogl16BlendStringErrora":{"name":"BlendStringError","abstract":"<p>Error enumeration for the blend strings parser</p>"},"Typealiases.html#/s:4Cogl17DepthTestFunctiona":{"name":"DepthTestFunction","abstract":"<p>When using depth testing one of these functions is used to compare"},"Typealiases.html#/s:4Cogl12FilterReturna":{"name":"FilterReturn","abstract":"<p>Return values for the <code>CoglXlibFilterFunc</code> and <code>CoglWin32FilterFunc</code> functions.</p>"},"Typealiases.html#/s:4Cogl7FogModea":{"name":"FogMode","abstract":"<p>The fog mode determines the equation used to calculate the fogging blend"},"Typealiases.html#/s:4Cogl11IndicesTypea":{"name":"IndicesType","abstract":"<p>You should aim to use the smallest data type that gives you enough"},"Typealiases.html#/s:4Cogl17MaterialAlphaFunca":{"name":"MaterialAlphaFunc","abstract":"<p>Alpha testing happens before blending primitives with the framebuffer and"},"Typealiases.html#/s:4Cogl14MaterialFiltera":{"name":"MaterialFilter","abstract":"<p>Texture filtering is used whenever the current pixel maps either to more"},"Typealiases.html#/s:4Cogl17MaterialLayerTypea":{"name":"MaterialLayerType","abstract":"<p>Available types of layers for a <code>CoglMaterial</code>. This enumeration"},"Typealiases.html#/s:4Cogl16MaterialWrapModea":{"name":"MaterialWrapMode","abstract":"<p>The wrap mode specifies what happens when texture coordinates"},"Typealiases.html#/s:4Cogl11PixelFormata":{"name":"PixelFormat","abstract":"<p>Pixel formats used by Cogl. For the formats with a byte per"},"Typealiases.html#/s:4Cogl13RendererErrora":{"name":"RendererError","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:4Cogl10ShaderTypea":{"name":"ShaderType","abstract":"<p>Types of shaders</p>"},"Typealiases.html#/s:4Cogl10StereoModea":{"name":"StereoMode","abstract":"<p>Represents how draw should affect the two buffers"},"Typealiases.html#/s:4Cogl11SystemErrora":{"name":"SystemError","abstract":"<p>Error enumeration for Cogl</p>"},"Typealiases.html#/s:4Cogl17TextureComponentsa":{"name":"TextureComponents","abstract":"<p>See <code>cogl_texture_set_components()</code>.</p>"},"Typealiases.html#/s:4Cogl12TextureErrora":{"name":"TextureError","abstract":"<p>Error codes that can be thrown when allocating textures.</p>"},"Typealiases.html#/s:4Cogl11TextureTypea":{"name":"TextureType","abstract":"<p>Constants representing the underlying hardware texture type of a"},"Typealiases.html#/s:4Cogl12VerticesModea":{"name":"VerticesMode","abstract":"<p>Different ways of interpreting vertices when drawing.</p>"},"Typealiases.html#/s:4Cogl7Windinga":{"name":"Winding","abstract":"<p>Enum used to represent the two directions of rotation. This can be"},"Typealiases.html#/s:4Cogl13WinsysFeaturea":{"name":"WinsysFeature","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:4Cogl0A7Texturea":{"name":"CoglTexture","abstract":"<p>A Cogl texture</p>"},"Typealiases.html#/s:4Cogl0A11Framebuffera":{"name":"CoglFramebuffer","abstract":"<p>Cogl frame buffer</p>"},"Typealiases.html#/s:4Cogl5Fixeda":{"name":"Fixed","abstract":"<p>Fixed point number, particularly fast on machines without and FPU</p>"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">_CoglTextureVertexSizeCheck</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefVyACSpySo01_abcdE0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefVyACSPySo01_abcdE0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefVyACSgSpySo01_abcdE0aGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefVyACSgSPySo01_abcdE0aGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefVyACxcAA01_bcdE8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_TextureVertexSizeCheckProtocol.html\">_TextureVertexSizeCheckProtocol</a></code></p>","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_TextureVertexSizeCheckRef.html#/s:4Cogl26_TextureVertexSizeCheckRefV13opaquePointerACs06OpaqueH0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_TextureVertexSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">_CoglMatrixSizeCheck</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefVyACSpySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefVyACSPySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefVyACSgSpySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefVyACSgSPySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefVyACxcAA01_bcD8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_MatrixSizeCheckProtocol.html\">_MatrixSizeCheckProtocol</a></code></p>","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_MatrixSizeCheckRef"},"Structs/_MatrixSizeCheckRef.html#/s:4Cogl19_MatrixSizeCheckRefV13opaquePointerACs06OpaqueG0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_MatrixSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">_CoglColorSizeCheck</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefVyACSpySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefVyACSPySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefVyACSgSpySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefVyACSgSPySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefVyACxcAA01_bcD8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_ColorSizeCheckProtocol.html\">_ColorSizeCheckProtocol</a></code></p>","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_ColorSizeCheckRef"},"Structs/_ColorSizeCheckRef.html#/s:4Cogl18_ColorSizeCheckRefV13opaquePointerACs06OpaqueG0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_ColorSizeCheckRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglTextureVertex</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefVyACSpySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefVyACSPySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefVyACSgSpySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefVyACSgSPySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefVyACxcAA0bC8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TextureVertexProtocol.html\">TextureVertexProtocol</a></code></p>","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureVertexRef"},"Structs/TextureVertexRef.html#/s:4Cogl16TextureVertexRefV13opaquePointerACs06OpaqueF0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureVertexRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglQuaternion</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/QuaternionProtocol.html\">QuaternionProtocol</a></code></p>","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"QuaternionRef"},"Structs/QuaternionRef.html#/s:4Cogl13QuaternionRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"QuaternionRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglMatrix</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MatrixProtocol.html\">MatrixProtocol</a></code></p>","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MatrixRef"},"Structs/MatrixRef.html#/s:4Cogl9MatrixRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MatrixRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglMaterialLayer</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefVyACSpySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefVyACSPySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefVyACSgSpySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefVyACSgSPySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefVyACxcAA0bC8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MaterialLayerProtocol.html\">MaterialLayerProtocol</a></code></p>","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialLayerRef"},"Structs/MaterialLayerRef.html#/s:4Cogl16MaterialLayerRefV13opaquePointerACs06OpaqueF0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialLayerRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglMaterial</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MaterialProtocol.html\">MaterialProtocol</a></code></p>","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialRef"},"Structs/MaterialRef.html#/s:4Cogl11MaterialRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglEuler</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EulerProtocol.html\">EulerProtocol</a></code></p>","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"EulerRef"},"Structs/EulerRef.html#/s:4Cogl8EulerRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"EulerRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglColor</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html\">ColorProtocol</a></code></p>","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"ColorRef"},"Structs/ColorRef.html#/s:4Cogl8ColorRefVACycfc":{"name":"init()","abstract":"<p>Creates a new (empty) color</p>","parent_name":"ColorRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglOffscreen</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OffscreenProtocol.html\">OffscreenProtocol</a></code></p>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV10to_textureACx_tcAA15TextureProtocolRzlufc":{"name":"init(to_texture:)","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">This</span> <span class=\"n\">creates</span> <span class=\"n\">an</span> <span class=\"n\">offscreen</span> <span class=\"n\">buffer</span> <span class=\"n\">object</span> <span class=\"n\">using</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"p\">`</span><span class=\"nv\">texture</span><span class=\"p\">`</span> <span class=\"k\">as</span> <span class=\"n\">the</span>","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV7textureACx_tcAA15TextureProtocolRzlufc":{"name":"init(texture:)","abstract":"<p>This creates an offscreen framebuffer object using the given","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV5newTo10to_textureACSgx_tAA15TextureProtocolRzlFZ":{"name":"newTo(to_texture:)","abstract":"<p>This creates an offscreen buffer object using the given <code>texture</code> as the","parent_name":"OffscreenRef"},"Structs/OffscreenRef.html#/s:4Cogl12OffscreenRefV7newWith7textureACSgx_tAA15TextureProtocolRzlFZ":{"name":"newWith(texture:)","abstract":"<p>This creates an offscreen framebuffer object using the given","parent_name":"OffscreenRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglBitmap</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/BitmapProtocol.html\">BitmapProtocol</a></code></p>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV4fileACSPys4Int8VGSg_tKcfc":{"name":"init(file:)","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Loads</span> <span class=\"n\">an</span> <span class=\"n\">image</span> <span class=\"n\">file</span> <span class=\"n\">from</span> <span class=\"n\">disk</span><span class=\"o\">.</span> <span class=\"kt\">This</span> <span class=\"n\">function</span> <span class=\"n\">can</span> <span class=\"n\">be</span> <span class=\"n\">safely</span> <span class=\"n\">called</span> <span class=\"n\">from</span>","parent_name":"BitmapRef"},"Structs/BitmapRef.html#/s:4Cogl9BitmapRefV7newFrom4fileACSgSPys4Int8VGSg_tKFZ":{"name":"newFrom(file:)","abstract":"<p>Loads an image file from disk. This function can be safely called from","parent_name":"BitmapRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglTexture</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefVyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type</p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefVyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type</p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefVyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional pointer to the underlying <code>C</code> data type</p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefVyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Conditional initialiser from an optional, non-mutable pointer to the underlying <code>C</code> data type</p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Conditional initialiser from an optional <code>gpointer</code></p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Conditional initialiser from an optional, non-mutable <code>gconstpointer</code></p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefVyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TextureProtocol.html\">TextureProtocol</a></code></p>","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV12constPointerACSPyxG_tclufc":{"name":"init(constPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV8mutatingACSV_tcfc":{"name":"init(mutating:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureRef"},"Structs/TextureRef.html#/s:4Cogl10TextureRefV13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureRef"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>The corresponding value of the raw type</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV8intValueSivp":{"name":"intValue","abstract":"<p>The equivalent raw Int value</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV3ints5Int32Vvp":{"name":"int","abstract":"<p>The equivalent raw <code>gint</code> value</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV5valueSo0abC0avp":{"name":"value","abstract":"<p>The equivalent underlying <code>CoglTextureFlags</code> enum value</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV8rawValueACs6UInt32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified raw value</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsVyACSo0abC0acfc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified <code>CoglTextureFlags</code> enum value</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified Int value</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV4noneACvpZ":{"name":"none","abstract":"<p>No flags specified</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV12noAutoMipmapACvpZ":{"name":"noAutoMipmap","abstract":"<p>Disables the automatic generation of","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV9noSlicingACvpZ":{"name":"noSlicing","abstract":"<p>Disables the slicing of the texture</p>","parent_name":"TextureFlags"},"Structs/TextureFlags.html#/s:4Cogl12TextureFlagsV7noAtlasACvpZ":{"name":"noAtlas","abstract":"<p>Disables the insertion of the texture inside","parent_name":"TextureFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>The corresponding value of the raw type</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsV8intValueSivp":{"name":"intValue","abstract":"<p>The equivalent raw Int value</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsV3ints5Int32Vvp":{"name":"int","abstract":"<p>The equivalent raw <code>gint</code> value</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsV5valueSo0abcD0avp":{"name":"value","abstract":"<p>The equivalent underlying <code>CoglReadPixelsFlags</code> enum value</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsV8rawValueACs6UInt32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified raw value</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsVyACSo0abcD0acfc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified <code>CoglReadPixelsFlags</code> enum value</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified Int value</p>","parent_name":"ReadPixelsFlags"},"Structs/ReadPixelsFlags.html#/s:4Cogl15ReadPixelsFlagsV11colorBufferACvpZ":{"name":"colorBuffer","abstract":"<p>Read from the color buffer</p>","parent_name":"ReadPixelsFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>The corresponding value of the raw type</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV8intValueSivp":{"name":"intValue","abstract":"<p>The equivalent raw Int value</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV3ints5Int32Vvp":{"name":"int","abstract":"<p>The equivalent raw <code>gint</code> value</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV5valueSo0abC0avp":{"name":"value","abstract":"<p>The equivalent underlying <code>CoglFeatureFlags</code> enum value</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV8rawValueACs6UInt32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified raw value</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsVyACSo0abC0acfc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified <code>CoglFeatureFlags</code> enum value</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified Int value</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV16textureRectangleACvpZ":{"name":"textureRectangle","abstract":"<p>ARB_texture_rectangle support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV11textureNpotACvpZ":{"name":"textureNpot","abstract":"<p>Non power of two textures are supported","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV10textureYuvACvpZ":{"name":"textureYuv","abstract":"<p>ycbcr conversion support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV17textureReadPixelsACvpZ":{"name":"textureReadPixels","abstract":"<p><code>glReadPixels()</code> support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV11shadersGlslACvpZ":{"name":"shadersGlsl","abstract":"<p>GLSL support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV9offscreenACvpZ":{"name":"offscreen","abstract":"<p>FBO support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV20offscreenMultisampleACvpZ":{"name":"offscreenMultisample","abstract":"<p>Multisample support on FBOs</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV13offscreenBlitACvpZ":{"name":"offscreenBlit","abstract":"<p>Blit support on FBOs</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV14fourClipPlanesACvpZ":{"name":"fourClipPlanes","abstract":"<p>At least 4 clip planes available</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV13stencilBufferACvpZ":{"name":"stencilBuffer","abstract":"<p>Stencil buffer support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV4vbosACvpZ":{"name":"vbos","abstract":"<p>VBO support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV4pbosACvpZ":{"name":"pbos","abstract":"<p>PBO support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV18unsignedIntIndicesACvpZ":{"name":"unsignedIntIndices","abstract":"<p>Set if","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV10depthRangeACvpZ":{"name":"depthRange","abstract":"<p><code>cogl_material_set_depth_range()</code> support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV16textureNpotBasicACvpZ":{"name":"textureNpotBasic","abstract":"<p>The hardware supports non power","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV17textureNpotMipmapACvpZ":{"name":"textureNpotMipmap","abstract":"<p>Mipmapping is supported in","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV17textureNpotRepeatACvpZ":{"name":"textureNpotRepeat","abstract":"<p>Repeat modes other than","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV11pointSpriteACvpZ":{"name":"pointSprite","abstract":"<p>Whether","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV9texture3dACvpZ":{"name":"texture3d","abstract":"<p>3D texture support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV12shadersArbfpACvpZ":{"name":"shadersArbfp","abstract":"<p>ARBFP support</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV16mapBufferForReadACvpZ":{"name":"mapBufferForRead","abstract":"<p>Whether <code>cogl_buffer_map()</code> is","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV17mapBufferForWriteACvpZ":{"name":"mapBufferForWrite","abstract":"<p>Whether <code>cogl_buffer_map()</code> is","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV16onscreenMultipleACvpZ":{"name":"onscreenMultiple","abstract":"<p>Undocumented</p>","parent_name":"FeatureFlags"},"Structs/FeatureFlags.html#/s:4Cogl12FeatureFlagsV12depthTextureACvpZ":{"name":"depthTexture","abstract":"<p>Whether <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A11Framebuffera\">CoglFramebuffer</a></code> support rendering the","parent_name":"FeatureFlags"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>The corresponding value of the raw type</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV8intValueSivp":{"name":"intValue","abstract":"<p>The equivalent raw Int value</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV3ints5Int32Vvp":{"name":"int","abstract":"<p>The equivalent raw <code>gint</code> value</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV5valueSo0abC0avp":{"name":"value","abstract":"<p>The equivalent underlying <code>CoglColorMask</code> enum value</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV8rawValueACs6UInt32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified raw value</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskVyACSo0abC0acfc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified <code>CoglColorMask</code> enum value</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified Int value</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV4noneACvpZ":{"name":"none","abstract":"<p>None of the color channels are masked</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV3redACvpZ":{"name":"red","abstract":"<p>Masks the red color channel</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV5greenACvpZ":{"name":"green","abstract":"<p>Masks the green color channel</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV4blueACvpZ":{"name":"blue","abstract":"<p>Masks the blue color channel</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV5alphaACvpZ":{"name":"alpha","abstract":"<p>Masks the alpha color channel</p>","parent_name":"ColorMask"},"Structs/ColorMask.html#/s:4Cogl9ColorMaskV3allACvpZ":{"name":"all","abstract":"<p>All of the color channels are masked</p>","parent_name":"ColorMask"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>The corresponding value of the raw type</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV8intValueSivp":{"name":"intValue","abstract":"<p>The equivalent raw Int value</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV3ints5Int32Vvp":{"name":"int","abstract":"<p>The equivalent raw <code>gint</code> value</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV5valueSo0abC0avp":{"name":"value","abstract":"<p>The equivalent underlying <code>CoglBufferTarget</code> enum value</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV8rawValueACs6UInt32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified raw value</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetVyACSo0abC0acfc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified <code>CoglBufferTarget</code> enum value</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified Int value</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV06windowB0ACvpZ":{"name":"windowBuffer","abstract":"<p>FIXME</p>","parent_name":"BufferTarget"},"Structs/BufferTarget.html#/s:4Cogl12BufferTargetV09offscreenB0ACvpZ":{"name":"offscreenBuffer","abstract":"<p>FIXME</p>","parent_name":"BufferTarget"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV8rawValues6UInt32Vvp":{"name":"rawValue","abstract":"<p>The corresponding value of the raw type</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV8intValueSivp":{"name":"intValue","abstract":"<p>The equivalent raw Int value</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV3ints5Int32Vvp":{"name":"int","abstract":"<p>The equivalent raw <code>gint</code> value</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV5valueSo0abC0avp":{"name":"value","abstract":"<p>The equivalent underlying <code>CoglBufferBit</code> enum value</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV8rawValueACs6UInt32V_tcfc":{"name":"init(rawValue:)","abstract":"<p>Creates a new instance with the specified raw value</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitVyACSo0abC0acfc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified <code>CoglBufferBit</code> enum value</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance with the specified Int value</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV5colorACvpZ":{"name":"color","abstract":"<p>Selects the primary color buffer</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV5depthACvpZ":{"name":"depth","abstract":"<p>Selects the depth buffer</p>","parent_name":"BufferBit"},"Structs/BufferBit.html#/s:4Cogl9BufferBitV7stencilACvpZ":{"name":"stencil","abstract":"<p>Selects the stencil buffer</p>","parent_name":"BufferBit"},"Structs/BufferBit.html":{"name":"BufferBit","abstract":"<p>Types of auxiliary buffers</p>"},"Structs/BufferTarget.html":{"name":"BufferTarget","abstract":"<p>Target flags for FBOs.</p>"},"Structs/ColorMask.html":{"name":"ColorMask","abstract":"<p>Defines a bit mask of color channels. This can be used with"},"Structs/FeatureFlags.html":{"name":"FeatureFlags","abstract":"<p>Flags for the supported features.</p>"},"Structs/ReadPixelsFlags.html":{"name":"ReadPixelsFlags","abstract":"<p>Flags for <code>cogl_framebuffer_read_pixels_into_bitmap()</code></p>"},"Structs/TextureFlags.html":{"name":"TextureFlags","abstract":"<p>Flags to pass to the cogl_texture_new_* family of functions.</p>"},"Structs/TextureRef.html":{"name":"TextureRef","abstract":"<p>The <code>TextureRef</code> type acts as a lightweight Swift reference to an underlying <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A7Texturea\">CoglTexture</a></code> instance."},"Structs/BitmapRef.html":{"name":"BitmapRef","abstract":"<p>The <code>BitmapRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglBitmap</code> instance."},"Structs/OffscreenRef.html":{"name":"OffscreenRef","abstract":"<p>The <code>OffscreenRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglOffscreen</code> instance."},"Structs/ColorRef.html":{"name":"ColorRef","abstract":"<p>The <code>ColorRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglColor</code> instance."},"Structs/EulerRef.html":{"name":"EulerRef","abstract":"<p>The <code>EulerRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglEuler</code> instance."},"Structs/MaterialRef.html":{"name":"MaterialRef","abstract":"<p>The <code>MaterialRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglMaterial</code> instance."},"Structs/MaterialLayerRef.html":{"name":"MaterialLayerRef","abstract":"<p>The <code>MaterialLayerRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglMaterialLayer</code> instance."},"Structs/MatrixRef.html":{"name":"MatrixRef","abstract":"<p>The <code>MatrixRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglMatrix</code> instance."},"Structs/QuaternionRef.html":{"name":"QuaternionRef","abstract":"<p>The <code>QuaternionRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglQuaternion</code> instance."},"Structs/TextureVertexRef.html":{"name":"TextureVertexRef","abstract":"<p>The <code>TextureVertexRef</code> type acts as a lightweight Swift reference to an underlying <code>CoglTextureVertex</code> instance."},"Structs/_ColorSizeCheckRef.html":{"name":"_ColorSizeCheckRef","abstract":"<p>The <code>_ColorSizeCheckRef</code> type acts as a lightweight Swift reference to an underlying <code>_CoglColorSizeCheck</code> instance."},"Structs/_MatrixSizeCheckRef.html":{"name":"_MatrixSizeCheckRef","abstract":"<p>The <code>_MatrixSizeCheckRef</code> type acts as a lightweight Swift reference to an underlying <code>_CoglMatrixSizeCheck</code> instance."},"Structs/_TextureVertexSizeCheckRef.html":{"name":"_TextureVertexSizeCheckRef","abstract":"<p>The <code>_TextureVertexSizeCheckRef</code> type acts as a lightweight Swift reference to an underlying <code>_CoglTextureVertexSizeCheck</code> instance."},"Protocols/_TextureVertexSizeCheckProtocol.html#/s:4Cogl31_TextureVertexSizeCheckProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>_CoglTextureVertexSizeCheck</code> instance.</p>","parent_name":"_TextureVertexSizeCheckProtocol"},"Protocols/_TextureVertexSizeCheckProtocol.html#/s:4Cogl31_TextureVertexSizeCheckProtocolP4_ptrSpySo01_abcdE0aGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>_CoglTextureVertexSizeCheck</code> instance.</p>","parent_name":"_TextureVertexSizeCheckProtocol"},"Protocols/_TextureVertexSizeCheckProtocol.html#/s:4Cogl31_TextureVertexSizeCheckProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>_TextureVertexSizeCheckProtocol</code></p>","parent_name":"_TextureVertexSizeCheckProtocol"},"Protocols/_TextureVertexSizeCheckProtocol.html#/s:4Cogl31_TextureVertexSizeCheckProtocolPAAE017compileTimeAssertabcD0Sivp":{"name":"compileTimeAssertCoglTextureVertexSize","abstract":"<p>Undocumented</p>","parent_name":"_TextureVertexSizeCheckProtocol"},"Protocols/_MatrixSizeCheckProtocol.html#/s:4Cogl24_MatrixSizeCheckProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>_CoglMatrixSizeCheck</code> instance.</p>","parent_name":"_MatrixSizeCheckProtocol"},"Protocols/_MatrixSizeCheckProtocol.html#/s:4Cogl24_MatrixSizeCheckProtocolP4_ptrSpySo01_abcD0aGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>_CoglMatrixSizeCheck</code> instance.</p>","parent_name":"_MatrixSizeCheckProtocol"},"Protocols/_MatrixSizeCheckProtocol.html#/s:4Cogl24_MatrixSizeCheckProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>_MatrixSizeCheckProtocol</code></p>","parent_name":"_MatrixSizeCheckProtocol"},"Protocols/_MatrixSizeCheckProtocol.html#/s:4Cogl24_MatrixSizeCheckProtocolPAAE017compileTimeAssertabC0Sivp":{"name":"compileTimeAssertCoglMatrixSize","abstract":"<p>Undocumented</p>","parent_name":"_MatrixSizeCheckProtocol"},"Protocols/_ColorSizeCheckProtocol.html#/s:4Cogl23_ColorSizeCheckProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>_CoglColorSizeCheck</code> instance.</p>","parent_name":"_ColorSizeCheckProtocol"},"Protocols/_ColorSizeCheckProtocol.html#/s:4Cogl23_ColorSizeCheckProtocolP4_ptrSpySo01_abcD0aGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>_CoglColorSizeCheck</code> instance.</p>","parent_name":"_ColorSizeCheckProtocol"},"Protocols/_ColorSizeCheckProtocol.html#/s:4Cogl23_ColorSizeCheckProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>_ColorSizeCheckProtocol</code></p>","parent_name":"_ColorSizeCheckProtocol"},"Protocols/_ColorSizeCheckProtocol.html#/s:4Cogl23_ColorSizeCheckProtocolPAAE017compileTimeAssertabC0Sivp":{"name":"compileTimeAssertCoglColorSize","abstract":"<p>Undocumented</p>","parent_name":"_ColorSizeCheckProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglTextureVertex</code> instance.</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolP4_ptrSpySo01_abC0VGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglTextureVertex</code> instance.</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>TextureVertexProtocol</code></p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE7polygon9nVertices8useColorySi_s5Int32VtF":{"name":"polygon(nVertices:useColor:)","abstract":"<p>Draws a convex polygon using the current source material to fill / texture","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE1xSfvp":{"name":"x","abstract":"<p>Model x-coordinate</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE1ySfvp":{"name":"y","abstract":"<p>Model y-coordinate</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE1zSfvp":{"name":"z","abstract":"<p>Model z-coordinate</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE2txSfvp":{"name":"tx","abstract":"<p>Texture x-coordinate</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE2tySfvp":{"name":"ty","abstract":"<p>Texture y-coordinate</p>","parent_name":"TextureVertexProtocol"},"Protocols/TextureVertexProtocol.html#/s:4Cogl21TextureVertexProtocolPAAE5colorSo01_A5ColorVvp":{"name":"color","abstract":"<p>The color to use at this vertex. This is ignored if","parent_name":"TextureVertexProtocol"},"Protocols/QuaternionProtocol.html#/s:4Cogl18QuaternionProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglQuaternion</code> instance.</p>","parent_name":"QuaternionProtocol"},"Protocols/QuaternionProtocol.html#/s:4Cogl18QuaternionProtocolP4_ptrSpySo01_aB0VGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglQuaternion</code> instance.</p>","parent_name":"QuaternionProtocol"},"Protocols/QuaternionProtocol.html#/s:4Cogl18QuaternionProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>QuaternionProtocol</code></p>","parent_name":"QuaternionProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglMatrix</code> instance.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolP10matrix_ptrSpySo01_aB0VGSgvp":{"name":"matrix_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglMatrix</code> instance.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>MatrixProtocol</code></p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE4copyAA0B3RefVSgyF":{"name":"copy()","abstract":"<p>Allocates a new <code>CoglMatrix</code> on the heap and initializes it with","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE4freeyyF":{"name":"free()","abstract":"<p>Frees a <code>CoglMatrix</code> that was previously allocated via a call to","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE7frustum4left5right6bottom3top5zNear4zFarySf_S5ftF":{"name":"frustum(left:right:bottom:top:zNear:zFar:)","abstract":"<p>Multiplies <code>matrix</code> by the given frustum perspective matrix.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE8getArraySPySfGSgyF":{"name":"getArray()","abstract":"<p>Casts <code>matrix</code> to a float array which can be directly passed to OpenGL.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE3get7inverses5Int32Vqd___tAaBRd__lF":{"name":"get(inverse:)","abstract":"<p>Gets the inverse transform of a given matrix and uses it to initialize","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE8initFrom5arrayySPySfGSg_tF":{"name":"initFrom(array:)","abstract":"<p>Initializes <code>matrix</code> with the contents of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE5arraySPySfGSgvp\">array</a></code></p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE12initIdentityyyF":{"name":"initIdentity()","abstract":"<p>Resets matrix to the identity matrix:</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE15initTranslation2tx2ty2tzySf_S2ftF":{"name":"initTranslation(tx:ty:tz:)","abstract":"<p>Resets matrix to the (tx, ty, tz) translation matrix:</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE6lookAt12eyePositionX0fG1Y0fG1Z7objectX0H1Y0H1Z8worldUpX0iJ1Y0iJ1ZySf_S8ftF":{"name":"lookAt(eyePositionX:eyePositionY:eyePositionZ:objectX:objectY:objectZ:worldUpX:worldUpY:worldUpZ:)","abstract":"<p>Applies a view transform <code>matrix</code> that positions the camera at","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE8multiply1a1byqd___qd__tAaBRd__lF":{"name":"multiply(a:b:)","abstract":"<p>Multiplies the two supplied matrices together and stores","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE5ortho4left5right6bottom3top4near3farySf_S5ftF":{"name":"ortho(left:right:bottom:top:near:far:)","abstract":"<p>Multiplies <code>matrix</code> by a parallel projection matrix.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE11perspective4fovY6aspect5zNear4zFarySf_S3ftF":{"name":"perspective(fovY:aspect:zNear:zFar:)","abstract":"<p>Multiplies <code>matrix</code> by the described perspective matrix</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE6rotate5angle1x1y1zySf_S3ftF":{"name":"rotate(angle:x:y:z:)","abstract":"<p>Multiplies <code>matrix</code> with a rotation matrix that applies a rotation","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE5scale2sx2sy2szySf_S2ftF":{"name":"scale(sx:sy:sz:)","abstract":"<p>Multiplies <code>matrix</code> with a transform matrix that scales along the X,","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE14transformPoint1x1y1z1wySpySfGSg_A3JtF":{"name":"transformPoint(x:y:z:w:)","abstract":"<p>Transforms a point whos position is given and returned as four float","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE9translate1x1y1zySf_S2ftF":{"name":"translate(x:y:z:)","abstract":"<p>Multiplies <code>matrix</code> with a transform matrix that translates along","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE9transposeyyF":{"name":"transpose()","abstract":"<p>Replaces <code>matrix</code> with its transpose. Ie, every element (i,j) in the","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE05debugB5PrintyyF":{"name":"debugMatrixPrint()","abstract":"<p>Prints the contents of a <code>CoglMatrix</code> to stdout.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE012getModelviewB0yyF":{"name":"getModelviewMatrix()","abstract":"<p>Stores the current model-view matrix in <code>matrix</code>.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE013getProjectionB0yyF":{"name":"getProjectionMatrix()","abstract":"<p>Stores the current projection matrix in <code>matrix</code>.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE012setModelviewB0yyF":{"name":"setModelviewMatrix()","abstract":"<p>Loads <code>matrix</code> as the new model-view matrix.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE013setProjectionB0yyF":{"name":"setProjectionMatrix()","abstract":"<p>Loads matrix as the new projection matrix.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE9transformyyF":{"name":"transform()","abstract":"<p>Multiplies the current model-view matrix by the given matrix.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE5arraySPySfGSgvp":{"name":"array","abstract":"<p>Casts <code>matrix</code> to a float array which can be directly passed to OpenGL.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE10isIdentitys5Int32Vvp":{"name":"isIdentity","abstract":"<p>Determines if the given matrix is an identity matrix.</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2xxSfvp":{"name":"xx","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2yxSfvp":{"name":"yx","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2zxSfvp":{"name":"zx","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2wxSfvp":{"name":"wx","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2xySfvp":{"name":"xy","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2yySfvp":{"name":"yy","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2zySfvp":{"name":"zy","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2wySfvp":{"name":"wy","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2xzSfvp":{"name":"xz","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2yzSfvp":{"name":"yz","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2zzSfvp":{"name":"zz","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2wzSfvp":{"name":"wz","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2xwSfvp":{"name":"xw","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2ywSfvp":{"name":"yw","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2zwSfvp":{"name":"zw","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MatrixProtocol.html#/s:4Cogl14MatrixProtocolPAAE2wwSfvp":{"name":"ww","abstract":"<p>Undocumented</p>","parent_name":"MatrixProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglMaterialLayer</code> instance.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolP4_ptrSpySo01_abC0VGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglMaterialLayer</code> instance.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>MaterialLayerProtocol</code></p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE12getMagFilterSo0abG0ayF":{"name":"getMagFilter()","abstract":"<p>Queries the currently set downscaling filter for a material later</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE12getMinFilterSo0abG0ayF":{"name":"getMinFilter()","abstract":"<p>Queries the currently set downscaling filter for a material layer</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE10getTextureSvSgyF":{"name":"getTexture()","abstract":"<p>Extracts a texture handle for a specific layer.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE7getTypeSo0abcF0ayF":{"name":"getType()","abstract":"<p>Retrieves the type of the layer</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE12getWrapModePSo0abfG0ayF":{"name":"getWrapModeP()","abstract":"<p>Gets the wrap mode for the &lsquo;p&rsquo; coordinate of texture lookups on","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE12getWrapModeSSo0abfG0ayF":{"name":"getWrapModeS()","abstract":"<p>Gets the wrap mode for the &lsquo;s&rsquo; coordinate of texture lookups on this layer.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE12getWrapModeTSo0abfG0ayF":{"name":"getWrapModeT()","abstract":"<p>Gets the wrap mode for the &lsquo;t&rsquo; coordinate of texture lookups on this layer.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE9magFilterSo0abF0avp":{"name":"magFilter","abstract":"<p>Queries the currently set downscaling filter for a material later</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE9minFilterSo0abF0avp":{"name":"minFilter","abstract":"<p>Queries the currently set downscaling filter for a material layer</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE7textureSvSgvp":{"name":"texture","abstract":"<p>Extracts a texture handle for a specific layer.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE4typeSo0abC4Typeavp":{"name":"type","abstract":"<p>Retrieves the type of the layer</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE9wrapModePSo0ab4WrapF0avp":{"name":"wrapModeP","abstract":"<p>Gets the wrap mode for the &lsquo;p&rsquo; coordinate of texture lookups on","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE9wrapModeSSo0ab4WrapF0avp":{"name":"wrapModeS","abstract":"<p>Gets the wrap mode for the &lsquo;s&rsquo; coordinate of texture lookups on this layer.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialLayerProtocol.html#/s:4Cogl21MaterialLayerProtocolPAAE9wrapModeTSo0ab4WrapF0avp":{"name":"wrapModeT","abstract":"<p>Gets the wrap mode for the &lsquo;t&rsquo; coordinate of texture lookups on this layer.</p>","parent_name":"MaterialLayerProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglMaterial</code> instance.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolP4_ptrSpySo01_aB0VGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglMaterial</code> instance.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>MaterialProtocol</code></p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE4copyAA0B3RefVSgyF":{"name":"copy()","abstract":"<p>Creates a new material with the configuration copied from the","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3get7ambientyqd___tAA05ColorC0Rd__lF":{"name":"get(ambient:)","abstract":"<p>Retrieves the current ambient color for <code>material</code></p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3get5coloryqd___tAA05ColorC0Rd__lF":{"name":"get(color:)","abstract":"<p>Retrieves the current material color.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3get7diffuseyqd___tAA05ColorC0Rd__lF":{"name":"get(diffuse:)","abstract":"<p>Retrieves the current diffuse color for <code>material</code></p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3get8emissionyqd___tAA05ColorC0Rd__lF":{"name":"get(emission:)","abstract":"<p>Retrieves the materials current emission color.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE32getLayerPointSpriteCoordsEnabled10layerIndexs5Int32VSi_tF":{"name":"getLayerPointSpriteCoordsEnabled(layerIndex:)","abstract":"<p>Gets whether point sprite coordinate generation is enabled for this","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE17getLayerWrapModeP10layerIndexSo0abfG0aSi_tF":{"name":"getLayerWrapModeP(layerIndex:)","abstract":"<p>Returns the wrap mode for the &lsquo;p&rsquo; coordinate of texture lookups on this","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE17getLayerWrapModeS10layerIndexSo0abfG0aSi_tF":{"name":"getLayerWrapModeS(layerIndex:)","abstract":"<p>Returns the wrap mode for the &lsquo;s&rsquo; coordinate of texture lookups on this","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE17getLayerWrapModeT10layerIndexSo0abfG0aSi_tF":{"name":"getLayerWrapModeT(layerIndex:)","abstract":"<p>Returns the wrap mode for the &lsquo;t&rsquo; coordinate of texture lookups on this","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE9getLayers4GLib7ListRefVSgyF":{"name":"getLayers()","abstract":"<p>This function lets you access a material&rsquo;s internal list of layers","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE10getNLayersSiyF":{"name":"getNLayers()","abstract":"<p>Retrieves the number of layers defined for the given <code>material</code></p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE12getPointSizeSfyF":{"name":"getPointSize()","abstract":"<p>Get the size of points drawn when <code>COGL_VERTICES_MODE_POINTS</code> is","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE12getShininessSfyF":{"name":"getShininess()","abstract":"<p>Retrieves the materials current emission color.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3get8specularyqd___tAA05ColorC0Rd__lF":{"name":"get(specular:)","abstract":"<p>Retrieves the materials current specular color.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE14getUserProgramSvSgyF":{"name":"getUserProgram()","abstract":"<p>Queries what user program has been associated with the given","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE11removeLayer10layerIndexySi_tF":{"name":"removeLayer(layerIndex:)","abstract":"<p>This function removes a layer from your material</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE20setAlphaTestFunction9alphaFunc0H9ReferenceySo0abeI0aSg_SftF":{"name":"setAlphaTestFunction(alphaFunc:alphaReference:)","abstract":"<p>Before a primitive is blended with the framebuffer, it goes through an","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set7ambientyqd___tAA05ColorC0Rd__lF":{"name":"set(ambient:)","abstract":"<p>Sets the material&rsquo;s ambient color, in the standard OpenGL lighting","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE20setAmbientAndDiffuse5coloryqd___tAA05ColorC0Rd__lF":{"name":"setAmbientAndDiffuse(color:)","abstract":"<p>Conveniently sets the diffuse and ambient color of <code>material</code> at the same","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE8setBlend11blendStrings5Int32VSPys4Int8VGSg_tKF":{"name":"setBlend(blendString:)","abstract":"<p>If not already familiar; please refer &lt;link linkend=&ldquo;cogl-Blend-Strings&rdquo;&gt;here&lt;/link&gt;","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE16setBlendConstant13constantColoryqd___tAA0hC0Rd__lF":{"name":"setBlendConstant(constantColor:)","abstract":"<p>When blending is setup to reference a CONSTANT blend factor then","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set5coloryqd___tAA05ColorC0Rd__lF":{"name":"set(color:)","abstract":"<p>Sets the basic color of the material, used when no lighting is enabled.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE10setColor4f3red5green4blue5alphaySf_S3ftF":{"name":"setColor4f(red:green:blue:alpha:)","abstract":"<p>Sets the basic color of the material, used when no lighting is enabled.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE11setColor4ub3red5green4blue5alphays5UInt8V_A3JtF":{"name":"setColor4ub(red:green:blue:alpha:)","abstract":"<p>Sets the basic color of the material, used when no lighting is enabled.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set7diffuseyqd___tAA05ColorC0Rd__lF":{"name":"set(diffuse:)","abstract":"<p>Sets the material&rsquo;s diffuse color, in the standard OpenGL lighting","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set8emissionyqd___tAA05ColorC0Rd__lF":{"name":"set(emission:)","abstract":"<p>Sets the material&rsquo;s emissive color, in the standard OpenGL lighting","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE8setLayer10layerIndex7textureySi_SvtF":{"name":"setLayer(layerIndex:texture:)","abstract":"<p>In addition to the standard OpenGL lighting model a Cogl material may have","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE15setLayerCombine10layerIndex11blendStrings5Int32VSi_SPys4Int8VGSgtKF":{"name":"setLayerCombine(layerIndex:blendString:)","abstract":"<p>If not already familiar; you can refer","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE23setLayerCombineConstant10layerIndex8constantySi_qd__tAA05ColorC0Rd__lF":{"name":"setLayerCombineConstant(layerIndex:constant:)","abstract":"<p>When you are using the &lsquo;CONSTANT&rsquo; color source in a layer combine","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE15setLayerFilters10layerIndex9minFilter03magJ0ySi_So0abJ0aAItF":{"name":"setLayerFilters(layerIndex:minFilter:magFilter:)","abstract":"<p>Changes the decimation and interpolation filters used when a texture is","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE14setLayerMatrix10layerIndex6matrixySi_qd__tAA0fC0Rd__lF":{"name":"setLayerMatrix(layerIndex:matrix:)","abstract":"<p>This function lets you set a matrix that can be used to e.g. translate","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE32setLayerPointSpriteCoordsEnabled10layerIndex6enables5Int32VSi_AHtKF":{"name":"setLayerPointSpriteCoordsEnabled(layerIndex:enable:)","abstract":"<p>When rendering points, if <code>enable</code> is <code>true</code> then the texture","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE16setLayerWrapMode10layerIndex4modeySi_So0abfG0atF":{"name":"setLayerWrapMode(layerIndex:mode:)","abstract":"<p>Sets the wrap mode for all three coordinates of texture lookups on","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE17setLayerWrapModeP10layerIndex4modeySi_So0abfG0atF":{"name":"setLayerWrapModeP(layerIndex:mode:)","abstract":"<p>Sets the wrap mode for the &lsquo;p&rsquo; coordinate of texture lookups on","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE17setLayerWrapModeS10layerIndex4modeySi_So0abfG0atF":{"name":"setLayerWrapModeS(layerIndex:mode:)","abstract":"<p>Sets the wrap mode for the &lsquo;s&rsquo; coordinate of texture lookups on this layer.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE17setLayerWrapModeT10layerIndex4modeySi_So0abfG0atF":{"name":"setLayerWrapModeT(layerIndex:mode:)","abstract":"<p>Sets the wrap mode for the &lsquo;t&rsquo; coordinate of texture lookups on this layer.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set9pointSizeySf_tF":{"name":"set(pointSize:)","abstract":"<p>Changes the size of points drawn when <code>COGL_VERTICES_MODE_POINTS</code> is","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set9shininessySf_tF":{"name":"set(shininess:)","abstract":"<p>Sets the shininess of the material, in the standard OpenGL lighting","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE3set8specularyqd___tAA05ColorC0Rd__lF":{"name":"set(specular:)","abstract":"<p>Sets the material&rsquo;s specular color, in the standard OpenGL lighting","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE7setUser7programySv_tF":{"name":"setUser(program:)","abstract":"<p>Associates a linked CoglProgram with the given material so that the","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE6layers4GLib7ListRefVSgvp":{"name":"layers","abstract":"<p>This function lets you access a material&rsquo;s internal list of layers","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE7nLayersSivp":{"name":"nLayers","abstract":"<p>Retrieves the number of layers defined for the given <code>material</code></p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE9pointSizeSfvp":{"name":"pointSize","abstract":"<p>Get the size of points drawn when <code>COGL_VERTICES_MODE_POINTS</code> is","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE9shininessSfvp":{"name":"shininess","abstract":"<p>Retrieves the materials current emission color.</p>","parent_name":"MaterialProtocol"},"Protocols/MaterialProtocol.html#/s:4Cogl16MaterialProtocolPAAE11userProgramSvSgvp":{"name":"userProgram","abstract":"<p>Queries what user program has been associated with the given","parent_name":"MaterialProtocol"},"Protocols/EulerProtocol.html#/s:4Cogl13EulerProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglEuler</code> instance.</p>","parent_name":"EulerProtocol"},"Protocols/EulerProtocol.html#/s:4Cogl13EulerProtocolP4_ptrSpySo01_aB0VGSgvp":{"name":"_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglEuler</code> instance.</p>","parent_name":"EulerProtocol"},"Protocols/EulerProtocol.html#/s:4Cogl13EulerProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>EulerProtocol</code></p>","parent_name":"EulerProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglColor</code> instance.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolP9color_ptrSpySo01_aB0VGSgvp":{"name":"color_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglColor</code> instance.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>ColorProtocol</code></p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE4copyAA0B3RefVSgyF":{"name":"copy()","abstract":"<p>Creates a copy of <code>color</code></p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE4freeyyF":{"name":"free()","abstract":"<p>Frees the resources allocated by <code>cogl_color_new()</code> and <code>cogl_color_copy()</code></p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE8getAlphaSfyF":{"name":"getAlpha()","abstract":"<p>Retrieves the alpha channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE12getAlphaBytes5UInt8VyF":{"name":"getAlphaByte()","abstract":"<p>Retrieves the alpha channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE13getAlphaFloatSfyF":{"name":"getAlphaFloat()","abstract":"<p>Retrieves the alpha channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE7getBlueSfyF":{"name":"getBlue()","abstract":"<p>Retrieves the blue channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11getBlueBytes5UInt8VyF":{"name":"getBlueByte()","abstract":"<p>Retrieves the blue channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE12getBlueFloatSfyF":{"name":"getBlueFloat()","abstract":"<p>Retrieves the blue channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE8getGreenSfyF":{"name":"getGreen()","abstract":"<p>Retrieves the green channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE12getGreenBytes5UInt8VyF":{"name":"getGreenByte()","abstract":"<p>Retrieves the green channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE13getGreenFloatSfyF":{"name":"getGreenFloat()","abstract":"<p>Retrieves the green channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE6getRedSfyF":{"name":"getRed()","abstract":"<p>Retrieves the red channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE10getRedBytes5UInt8VyF":{"name":"getRedByte()","abstract":"<p>Retrieves the red channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11getRedFloatSfyF":{"name":"getRedFloat()","abstract":"<p>Retrieves the red channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE10initFrom4f3red5green4blue5alphaySf_S3ftF":{"name":"initFrom4f(red:green:blue:alpha:)","abstract":"<p>Sets the values of the passed channels into a <code>CoglColor</code></p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11initFrom4fv10colorArrayySPySfGSg_tF":{"name":"initFrom4fv(colorArray:)","abstract":"<p>Sets the values of the passed channels into a <code>CoglColor</code></p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11initFrom4ub3red5green4blue5alphays5UInt8V_A3JtF":{"name":"initFrom4ub(red:green:blue:alpha:)","abstract":"<p>Sets the values of the passed channels into a <code>CoglColor</code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11premultiplyyyF":{"name":"premultiply()","abstract":"<p>Converts a non-premultiplied color to a pre-multiplied color. For","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3set5alphaySf_tF":{"name":"set(alpha:)","abstract":"<p>Sets the alpha channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5alphaSfvp\">alpha</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE12setAlphaByte5alphays5UInt8V_tF":{"name":"setAlphaByte(alpha:)","abstract":"<p>Sets the alpha channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5alphaSfvp\">alpha</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE13setAlphaFloat5alphaySf_tF":{"name":"setAlphaFloat(alpha:)","abstract":"<p>Sets the alpha channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5alphaSfvp\">alpha</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3set4blueySf_tF":{"name":"set(blue:)","abstract":"<p>Sets the blue channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE4blueSfvp\">blue</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11setBlueByte4blueys5UInt8V_tF":{"name":"setBlueByte(blue:)","abstract":"<p>Sets the blue channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE4blueSfvp\">blue</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE12setBlueFloat4blueySf_tF":{"name":"setBlueFloat(blue:)","abstract":"<p>Sets the blue channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE4blueSfvp\">blue</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE9setFrom4f3red5green4blue5alphaySf_S3ftF":{"name":"setFrom4f(red:green:blue:alpha:)","abstract":"<p>Sets the values of the passed channels into a <code>CoglColor</code></p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE10setFrom4ub3red5green4blue5alphays5UInt8V_A3JtF":{"name":"setFrom4ub(red:green:blue:alpha:)","abstract":"<p>Sets the values of the passed channels into a <code>CoglColor</code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3set5greenySf_tF":{"name":"set(green:)","abstract":"<p>Sets the green channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5greenSfvp\">green</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE12setGreenByte5greenys5UInt8V_tF":{"name":"setGreenByte(green:)","abstract":"<p>Sets the green channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5greenSfvp\">green</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE13setGreenFloat5greenySf_tF":{"name":"setGreenFloat(green:)","abstract":"<p>Sets the green channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5greenSfvp\">green</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3set3redySf_tF":{"name":"set(red:)","abstract":"<p>Sets the red channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3redSfvp\">red</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE10setRedByte3redys5UInt8V_tF":{"name":"setRedByte(red:)","abstract":"<p>Sets the red channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3redSfvp\">red</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11setRedFloat3redySf_tF":{"name":"setRedFloat(red:)","abstract":"<p>Sets the red channel of <code>color</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3redSfvp\">red</a></code>.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5toHsl3hue10saturation9luminanceySpySfGSg_A2ItF":{"name":"toHsl(hue:saturation:luminance:)","abstract":"<p>Converts <code>color</code> to the HLS format.</p>","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE13unpremultiplyyyF":{"name":"unpremultiply()","abstract":"<p>Converts a pre-multiplied color to a non-premultiplied color. For","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE11initFromHsl3hue10saturation9luminanceySf_S2ftF":{"name":"initFromHsl(hue:saturation:luminance:)","abstract":"<p>Converts a color expressed in HLS (hue, luminance and saturation)","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5clear7buffersySi_tF":{"name":"clear(buffers:)","abstract":"<p>Clears all the auxiliary buffers identified in the <code>buffers</code> mask, and if","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE16colorInitFromHsl3hue10saturation9luminanceySf_S2ftF":{"name":"colorInitFromHsl(hue:saturation:luminance:)","abstract":"<p>Converts a color expressed in HLS (hue, luminance and saturation)","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE6setFog4mode7density5zNear4zFarySo0aE4Modea_S3ftF":{"name":"setFog(mode:density:zNear:zFar:)","abstract":"<p>Enables fogging. Fogging causes vertices that are further away from the eye","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE09setSourceB0yyF":{"name":"setSourceColor()","abstract":"<p>This is a convenience function for creating a solid fill source material","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5alphaSfvp":{"name":"alpha","abstract":"<p>Retrieves the alpha channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE9alphaBytes5UInt8Vvp":{"name":"alphaByte","abstract":"<p>Retrieves the alpha channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE10alphaFloatSfvp":{"name":"alphaFloat","abstract":"<p>Retrieves the alpha channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE4blueSfvp":{"name":"blue","abstract":"<p>Retrieves the blue channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE8blueBytes5UInt8Vvp":{"name":"blueByte","abstract":"<p>Retrieves the blue channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE9blueFloatSfvp":{"name":"blueFloat","abstract":"<p>Retrieves the blue channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE5greenSfvp":{"name":"green","abstract":"<p>Retrieves the green channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE9greenBytes5UInt8Vvp":{"name":"greenByte","abstract":"<p>Retrieves the green channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE10greenFloatSfvp":{"name":"greenFloat","abstract":"<p>Retrieves the green channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE3redSfvp":{"name":"red","abstract":"<p>Retrieves the red channel of <code>color</code> as a fixed point","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE7redBytes5UInt8Vvp":{"name":"redByte","abstract":"<p>Retrieves the red channel of <code>color</code> as a byte value","parent_name":"ColorProtocol"},"Protocols/ColorProtocol.html#/s:4Cogl13ColorProtocolPAAE8redFloatSfvp":{"name":"redFloat","abstract":"<p>Retrieves the red channel of <code>color</code> as a floating point","parent_name":"ColorProtocol"},"Protocols/OffscreenProtocol.html#/s:4Cogl17OffscreenProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglOffscreen</code> instance.</p>","parent_name":"OffscreenProtocol"},"Protocols/OffscreenProtocol.html#/s:4Cogl17OffscreenProtocolP13offscreen_ptrSpySo01_aB0VGSgvp":{"name":"offscreen_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglOffscreen</code> instance.</p>","parent_name":"OffscreenProtocol"},"Protocols/OffscreenProtocol.html#/s:4Cogl17OffscreenProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>OffscreenProtocol</code></p>","parent_name":"OffscreenProtocol"},"Protocols/BitmapProtocol.html#/s:4Cogl14BitmapProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code>CoglBitmap</code> instance.</p>","parent_name":"BitmapProtocol"},"Protocols/BitmapProtocol.html#/s:4Cogl14BitmapProtocolP10bitmap_ptrSpySo01_aB0VGSgvp":{"name":"bitmap_ptr","abstract":"<p>Typed pointer to the underlying <code>CoglBitmap</code> instance.</p>","parent_name":"BitmapProtocol"},"Protocols/BitmapProtocol.html#/s:4Cogl14BitmapProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>BitmapProtocol</code></p>","parent_name":"BitmapProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolP3ptrSvSgvp":{"name":"ptr","abstract":"<p>Untyped pointer to the underlying <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A7Texturea\">CoglTexture</a></code> instance.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolP11texture_ptrSpySo01_aB0VGSgvp":{"name":"texture_ptr","abstract":"<p>Typed pointer to the underlying <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A7Texturea\">CoglTexture</a></code> instance.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolP3rawxSv_tcfc":{"name":"init(raw:)","abstract":"<p>Required Initialiser for types conforming to <code>TextureProtocol</code></p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE8allocates5Int32VyKF":{"name":"allocate()","abstract":"<p>Explicitly allocates the storage for the given <code>texture</code> which","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE13getComponentsSo01_abE0VyF":{"name":"getComponents()","abstract":"<p>Queries what components the given <code>texture</code> stores internally as set","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE7getData6format9rowstride4dataSiSo0A11PixelFormata_SiSpys5UInt8VGSgtF":{"name":"getData(format:rowstride:data:)","abstract":"<p>Copies the pixel data from a cogl texture to system memory.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE05getGlB003outE6Handle0fE6Targets5Int32VSpys6UInt32VGSg_ALtF":{"name":"getGlTexture(outGlHandle:outGlTarget:)","abstract":"<p>Queries the GL handles for a GPU side texture through its <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A7Texturea\">CoglTexture</a></code>.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE9getHeightSiyF":{"name":"getHeight()","abstract":"<p>Queries the height of a cogl texture.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE11getMaxWasteSiyF":{"name":"getMaxWaste()","abstract":"<p>Queries the maximum wasted (unused) pixels in one dimension of a GPU side","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE16getPremultiplieds5Int32VyF":{"name":"getPremultiplied()","abstract":"<p>Queries the pre-multiplied alpha status for internally stored red,","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE8getWidthSiyF":{"name":"getWidth()","abstract":"<p>Queries the width of a cogl texture.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE3set10componentsySo01_aB10ComponentsV_tF":{"name":"set(components:)","abstract":"<p>Affects the internal storage format for this texture by specifying","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE3set13premultipliedys5Int32V_tF":{"name":"set(premultiplied:)","abstract":"<p>Affects the internal storage format for this texture by specifying","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE9setRegion4srcX0F1Y4dstX0G1Y0G5Width0G6Height5width6height6format9rowstride4datas5Int32VSi_S7iSo0A11PixelFormataSiSPys5UInt8VGSgtF":{"name":"setRegion(srcX:srcY:dstX:dstY:dstWidth:dstHeight:width:height:format:rowstride:data:)","abstract":"<p>Sets the pixels in a rectangular subregion of <code>texture</code> from an in-memory","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE09setSourceB0yyF":{"name":"setSourceTexture()","abstract":"<p>This is a convenience function for creating a material with the first","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE10componentsSo01_aB10ComponentsVvp":{"name":"components","abstract":"<p>Queries what components the given <code>texture</code> stores internally as set","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE6heightSivp":{"name":"height","abstract":"<p>Queries the height of a cogl texture.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE8isSliceds5Int32Vvp":{"name":"isSliced","abstract":"<p>Queries if a texture is sliced (stored as multiple GPU side tecture","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE8maxWasteSivp":{"name":"maxWaste","abstract":"<p>Queries the maximum wasted (unused) pixels in one dimension of a GPU side","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE13premultiplieds5Int32Vvp":{"name":"premultiplied","abstract":"<p>Queries the pre-multiplied alpha status for internally stored red,","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html#/s:4Cogl15TextureProtocolPAAE5widthSivp":{"name":"width","abstract":"<p>Queries the width of a cogl texture.</p>","parent_name":"TextureProtocol"},"Protocols/TextureProtocol.html":{"name":"TextureProtocol","abstract":"<p>The <code>TextureProtocol</code> protocol exposes the methods and properties of an underlying <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A7Texturea\">CoglTexture</a></code> instance."},"Protocols/BitmapProtocol.html":{"name":"BitmapProtocol","abstract":"<p>The <code>BitmapProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglBitmap</code> instance."},"Protocols/OffscreenProtocol.html":{"name":"OffscreenProtocol","abstract":"<p>The <code>OffscreenProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglOffscreen</code> instance."},"Protocols/ColorProtocol.html":{"name":"ColorProtocol","abstract":"<p>The <code>ColorProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglColor</code> instance."},"Protocols/EulerProtocol.html":{"name":"EulerProtocol","abstract":"<p>The <code>EulerProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglEuler</code> instance."},"Protocols/MaterialProtocol.html":{"name":"MaterialProtocol","abstract":"<p>The <code>MaterialProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglMaterial</code> instance."},"Protocols/MaterialLayerProtocol.html":{"name":"MaterialLayerProtocol","abstract":"<p>The <code>MaterialLayerProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglMaterialLayer</code> instance."},"Protocols/MatrixProtocol.html":{"name":"MatrixProtocol","abstract":"<p>The <code>MatrixProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglMatrix</code> instance."},"Protocols/QuaternionProtocol.html":{"name":"QuaternionProtocol","abstract":"<p>The <code>QuaternionProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglQuaternion</code> instance."},"Protocols/TextureVertexProtocol.html":{"name":"TextureVertexProtocol","abstract":"<p>The <code>TextureVertexProtocol</code> protocol exposes the methods and properties of an underlying <code>CoglTextureVertex</code> instance."},"Protocols/_ColorSizeCheckProtocol.html":{"name":"_ColorSizeCheckProtocol","abstract":"<p>The <code>_ColorSizeCheckProtocol</code> protocol exposes the methods and properties of an underlying <code>_CoglColorSizeCheck</code> instance."},"Protocols/_MatrixSizeCheckProtocol.html":{"name":"_MatrixSizeCheckProtocol","abstract":"<p>The <code>_MatrixSizeCheckProtocol</code> protocol exposes the methods and properties of an underlying <code>_CoglMatrixSizeCheck</code> instance."},"Protocols/_TextureVertexSizeCheckProtocol.html":{"name":"_TextureVertexSizeCheckProtocol","abstract":"<p>The <code>_TextureVertexSizeCheckProtocol</code> protocol exposes the methods and properties of an underlying <code>_CoglTextureVertexSizeCheck</code> instance."},"Functions.html#/s:4Cogl8angleCos0B0s5Int32VAE_tF":{"name":"angleCos(angle:)","abstract":"<p>Computes the cosine of <code>angle</code></p>"},"Functions.html#/s:4Cogl8angleSin0B0s5Int32VAE_tF":{"name":"angleSin(angle:)","abstract":"<p>Computes the sine of <code>angle</code></p>"},"Functions.html#/s:4Cogl8angleTan0B0s5Int32VAE_tF":{"name":"angleTan(angle:)","abstract":"<p>Computes the tangent of <code>angle</code></p>"},"Functions.html#/s:4Cogl7beginGlyyF":{"name":"beginGl()","abstract":"<p>We do not advise nor reliably support the interleaving of raw GL drawing and"},"Functions.html#/s:4Cogl16bitmapErrorQuarks6UInt32VyF":{"name":"bitmapErrorQuark()","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl21blendStringErrorQuarks6UInt32VyF":{"name":"blendStringErrorQuark()","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl14checkExtension4name3exts5Int32VSPys4Int8VGSg_AJtF":{"name":"checkExtension(name:ext:)","abstract":"<p>Check whether <code>name</code> occurs in list of extensions in <code>ext</code>.</p>"},"Functions.html#/s:4Cogl5clear5color7buffersyx_SitAA13ColorProtocolRzlF":{"name":"clear(color:buffers:)","abstract":"<p>Clears all the auxiliary buffers identified in the <code>buffers</code> mask, and if"},"Functions.html#/s:4Cogl10clipEnsureyyF":{"name":"clipEnsure()","abstract":"<p>Ensures that the current clipping region has been set in GL. This"},"Functions.html#/s:4Cogl7clipPopyyF":{"name":"clipPop()","abstract":"<p>Reverts the clipping region to the state before the last call to"},"Functions.html#/s:4Cogl8clipPush7xOffset01yD05width6heightySf_S3ftF":{"name":"clipPush(xOffset:yOffset:width:height:)","abstract":"<p>Specifies a rectangular clipping area for all subsequent drawing"},"Functions.html#/s:4Cogl8clipPush9primitive8boundsX10E2Y10E2X20E2Y2ySpySo01_A9PrimitiveVGSg_S4ftF":{"name":"clipPush(primitive:boundsX1:boundsY1:boundsX2:boundsY2:)","abstract":"<p>Sets a new clipping area using a 2D shaped described with a"},"Functions.html#/s:4Cogl17clipPushRectangle2x02y02x12y1ySf_S3ftF":{"name":"clipPushRectangle(x0:y0:x1:y1:)","abstract":"<p>Specifies a rectangular clipping area for all subsequent drawing"},"Functions.html#/s:4Cogl18clipPushWindowRect7xOffset01yF05width6heightySf_S3ftF":{"name":"clipPushWindowRect(xOffset:yOffset:width:height:)","abstract":"<p>Specifies a rectangular clipping area for all subsequent drawing"},"Functions.html#/s:4Cogl23clipPushWindowRectangle7xOffset01yF05width6heightySi_S3itF":{"name":"clipPushWindowRectangle(xOffset:yOffset:width:height:)","abstract":"<p>Specifies a rectangular clipping area for all subsequent drawing"},"Functions.html#/s:4Cogl16clipStackRestoreyyF":{"name":"clipStackRestore()","abstract":"<p>Restore the state of the clipping stack that was previously saved"},"Functions.html#/s:4Cogl13clipStackSaveyyF":{"name":"clipStackSave()","abstract":"<p>Save the entire state of the clipping stack and then clear all"},"Functions.html#/s:4Cogl28clutterCheckExtensionCLUTTER4name3exts5Int32VSPys4Int8VGSg_AJtF":{"name":"clutterCheckExtensionCLUTTER(name:ext:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl30clutterWinsysHasFeatureCLUTTER7features5Int32VSo01_acE0V_tF":{"name":"clutterWinsysHasFeatureCLUTTER(feature:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl10colorEqual2v12v2s5Int32VSvSg_AGtF":{"name":"colorEqual(v1:v2:)","abstract":"<p>Compares two <code>CoglColor</code>&lt;!&ndash; &ndash;&gt;s and checks if they are the same.</p>"},"Functions.html#/s:4Cogl16colorInitFromHsl0B03hue10saturation9luminanceyx_S3ftAA13ColorProtocolRzlF":{"name":"colorInitFromHsl(color:hue:saturation:luminance:)","abstract":"<p>Converts a color expressed in HLS (hue, luminance and saturation)"},"Functions.html#/s:4Cogl13createProgramSvSgyF":{"name":"createProgram()","abstract":"<p>Create a new cogl program object that can be used to replace parts of the GL"},"Functions.html#/s:4Cogl12createShader10shaderTypeSvSgSo0acE0a_tF":{"name":"createShader(shaderType:)","abstract":"<p>Create a new shader handle, use <code>cogl_shader_source()</code> to set the"},"Functions.html#/s:4Cogl16debugMatrixPrint6matrixyx_tAA0C8ProtocolRzlF":{"name":"debugMatrixPrint(matrix:)","abstract":"<p>Prints the contents of a <code>CoglMatrix</code> to stdout.</p>"},"Functions.html#/s:4Cogl10disableFogyyF":{"name":"disableFog()","abstract":"<p>This function disables fogging, so primitives drawn afterwards will not be"},"Functions.html#/s:4Cogl13doubleToFixed5values5Int32VSd_tF":{"name":"doubleToFixed(value:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl11doubleToInt5valueSiSd_tF":{"name":"doubleToInt(value:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl12doubleToUint5valueSiSd_tF":{"name":"doubleToUint(value:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl5endGlyyF":{"name":"endGl()","abstract":"<p>This is the counterpart to <code>cogl_begin_gl()</code> used to delimit blocks of drawing"},"Functions.html#/s:4Cogl17featuresAvailable0B0s5Int32VAA12FeatureFlagsV_tF":{"name":"featuresAvailable(features:)","abstract":"<p>Checks whether the given COGL features are available. Multiple"},"Functions.html#/s:4Cogl5flushyyF":{"name":"flush()","abstract":"<p>This function should only need to be called in exceptional circumstances.</p>"},"Functions.html#/s:4Cogl25framebufferGetColorFormat0B0So0a5PixelE0aSpySo01_A7TextureVGSg_tF":{"name":"framebufferGetColorFormat(framebuffer:)","abstract":"<p>Queries the common <code>CoglPixelFormat</code> of all color buffers attached"},"Functions.html#/s:4Cogl7frustum4left5right6bottom3top5zNear4zFarySf_S5ftF":{"name":"frustum(left:right:bottom:top:zNear:zFar:)","abstract":"<p>Replaces the current projection matrix with a perspective matrix"},"Functions.html#/s:4Cogl25getBackfaceCullingEnableds5Int32VyF":{"name":"getBackfaceCullingEnabled()","abstract":"<p>Queries if backface culling has been enabled via"},"Functions.html#/s:4Cogl11getBitmasks3red5green4blue5alphaySpys5Int32VGSg_A3JtF":{"name":"getBitmasks(red:green:blue:alpha:)","abstract":"<p>Gets the number of bitplanes used for each of the color components"},"Functions.html#/s:4Cogl19getDepthTestEnableds5Int32VyF":{"name":"getDepthTestEnabled()","abstract":"<p>Queries if depth testing has been enabled via <code>cogl_set_depth_test_enable()</code></p>"},"Functions.html#/s:4Cogl11getFeaturesAA12FeatureFlagsVyF":{"name":"getFeatures()","abstract":"<p>Returns all of the features supported by COGL.</p>"},"Functions.html#/s:4Cogl12getModelview6matrixyx_tAA14MatrixProtocolRzlF":{"name":"getModelview(matrix:)","abstract":"<p>Stores the current model-view matrix in <code>matrix</code>.</p>"},"Functions.html#/s:4Cogl14getOptionGroup4GLib0cD3RefVSgyF":{"name":"getOptionGroup()","abstract":"<p>Retrieves the <code>GOptionGroup</code> used by Cogl to parse the command"},"Functions.html#/s:4Cogl14getProcAddress4nameyyXCSgSPys4Int8VGSg_tF":{"name":"getProcAddress(name:)","abstract":"<p>Gets a pointer to a given GL or GL ES extension function. This acts"},"Functions.html#/s:4Cogl13getProjection6matrixyx_tAA14MatrixProtocolRzlF":{"name":"getProjection(matrix:)","abstract":"<p>Stores the current projection matrix in <code>matrix</code>.</p>"},"Functions.html#/s:4Cogl9getSourceSvSgyF":{"name":"getSource()","abstract":"<p>Returns the current source material as previously set using"},"Functions.html#/s:4Cogl11getViewport1vySpySfGSg_tF":{"name":"getViewport(v:)","abstract":"<p>Stores the current viewport in <code>v</code>. <code>v</code>[0] and <code>v</code>[1] get the x and y"},"Functions.html#/s:4Cogl18gtypeMatrixGetTypeSuyF":{"name":"gtypeMatrixGetType()","abstract":"<p><strong>gtype_matrix_get_type is deprecated:</strong>"},"Functions.html#/s:4Cogl13handleGetTypeSuyF":{"name":"handleGetType()","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl9handleRef0B0SvSgSv_tF":{"name":"handleRef(handle:)","abstract":"<p>Increases the reference count of <code>handle</code> by 1</p>"},"Functions.html#/s:4Cogl11handleUnref0B0ySv_tF":{"name":"handleUnref(handle:)","abstract":"<p>Drecreases the reference count of <code>handle</code> by 1; if the reference"},"Functions.html#/s:4Cogl8isBitmap6objects5Int32VSvSg_tF":{"name":"isBitmap(object:)","abstract":"<p>Checks whether <code>object</code> is a <code>CoglBitmap</code></p>"},"Functions.html#/s:4Cogl10isMaterial6handles5Int32VSv_tF":{"name":"isMaterial(handle:)","abstract":"<p>Gets whether the given handle references an existing material object.</p>"},"Functions.html#/s:4Cogl11isOffscreen6objects5Int32VSvSg_tF":{"name":"isOffscreen(object:)","abstract":"<p>Determines whether the given <code>CoglObject</code> references an offscreen"},"Functions.html#/s:4Cogl9isProgram6handles5Int32VSv_tF":{"name":"isProgram(handle:)","abstract":"<p>Gets whether the given handle references an existing program object.</p>"},"Functions.html#/s:4Cogl8isShader6handles5Int32VSv_tF":{"name":"isShader(handle:)","abstract":"<p>Gets whether the given handle references an existing shader object.</p>"},"Functions.html#/s:4Cogl9isTexture6objects5Int32VSvSg_tF":{"name":"isTexture(object:)","abstract":"<p>Gets whether the given object references a texture object.</p>"},"Functions.html#/s:4Cogl14isVertexBuffer6handles5Int32VSv_tF":{"name":"isVertexBuffer(handle:)","abstract":"<p>Checks whether <code>handle</code> is a Vertex Buffer Object</p>"},"Functions.html#/s:4Cogl21isVertexBufferIndices6handles5Int32VSv_tF":{"name":"isVertexBufferIndices(handle:)","abstract":"<p>Checks whether <code>handle</code> is a handle to the indices for a vertex"},"Functions.html#/s:4Cogl11materialRef0B0SvSgSv_tF":{"name":"materialRef(material:)","abstract":"<p>Increment the reference count for a <code>CoglMaterial</code>.</p>"},"Functions.html#/s:4Cogl13materialUnref0B0ySv_tF":{"name":"materialUnref(material:)","abstract":"<p>Decrement the reference count for a <code>CoglMaterial</code>.</p>"},"Functions.html#/s:4Cogl11matrixEqual2v12v2s5Int32VSvSg_AGtF":{"name":"matrixEqual(v1:v2:)","abstract":"<p>Compares two matrices to see if they represent the same"},"Functions.html#/s:4Cogl36onscreenClutterBackendSetSizeCLUTTER5width6heightySi_SitF":{"name":"onscreenClutterBackendSetSizeCLUTTER(width:height:)","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl5ortho4left5right6bottom3top4near3farySf_S5ftF":{"name":"ortho(left:right:bottom:top:near:far:)","abstract":"<p>Replaces the current projection matrix with an orthographic projection"},"Functions.html#/s:4Cogl11perspective4fovy6aspect5zNear4zFarySf_S3ftF":{"name":"perspective(fovy:aspect:zNear:zFar:)","abstract":"<p>Replaces the current projection matrix with a perspective matrix"},"Functions.html#/s:4Cogl7polygon8vertices9nVertices8useColoryx_Sis5Int32VtAA21TextureVertexProtocolRzlF":{"name":"polygon(vertices:nVertices:useColor:)","abstract":"<p>Draws a convex polygon using the current source material to fill / texture"},"Functions.html#/s:4Cogl13popDrawBufferyyF":{"name":"popDrawBuffer()","abstract":"<p>Restore <code>cogl_set_draw_buffer()</code> state.</p>"},"Functions.html#/s:4Cogl14popFramebufferyyF":{"name":"popFramebuffer()","abstract":"<p>Restores the framebuffer that was previously at the top of the stack."},"Functions.html#/s:4Cogl9popMatrixyyF":{"name":"popMatrix()","abstract":"<p>Restores the current model-view matrix from the matrix stack.</p>"},"Functions.html#/s:4Cogl9popSourceyyF":{"name":"popSource()","abstract":"<p>Removes the material at the top of the source stack. The material"},"Functions.html#/s:4Cogl19programAttachShader0B6Handle06shaderE0ySv_SvtF":{"name":"programAttachShader(programHandle:shaderHandle:)","abstract":"<p>Attaches a shader to a program object. A program can have multiple"},"Functions.html#/s:4Cogl25programGetUniformLocation6handle11uniformNameSiSv_SPys4Int8VGSgtF":{"name":"programGetUniformLocation(handle:uniformName:)","abstract":"<p>Retrieve the location (offset) of a uniform variable in a shader program,"},"Functions.html#/s:4Cogl11programLink6handleySv_tF":{"name":"programLink(handle:)","abstract":"<p>Links a program making it ready for use. Note that calling this"},"Functions.html#/s:4Cogl10programRef6handleSvSgSv_tF":{"name":"programRef(handle:)","abstract":"<p>Add an extra reference to a program.</p>"},"Functions.html#/s:4Cogl19programSetUniform1f0B015uniformLocation5valueySv_SiSftF":{"name":"programSetUniform1f(program:uniformLocation:value:)","abstract":"<p>Changes the value of a floating point uniform for the given linked"},"Functions.html#/s:4Cogl19programSetUniform1i0B015uniformLocation5valueySv_S2itF":{"name":"programSetUniform1i(program:uniformLocation:value:)","abstract":"<p>Changes the value of an integer uniform for the given linked"},"Functions.html#/s:4Cogl22programSetUniformFloat0B015uniformLocation11nComponents5count5valueySv_S3iSPySfGSgtF":{"name":"programSetUniformFloat(program:uniformLocation:nComponents:count:value:)","abstract":"<p>Changes the value of a float vector uniform, or uniform array for"},"Functions.html#/s:4Cogl20programSetUniformInt0B015uniformLocation11nComponents5count5valueySv_S3iSPys5Int32VGSgtF":{"name":"programSetUniformInt(program:uniformLocation:nComponents:count:value:)","abstract":"<p>Changes the value of a int vector uniform, or uniform array for"},"Functions.html#/s:4Cogl23programSetUniformMatrix0B015uniformLocation10dimensions5count9transpose5valueySv_S3is5Int32VSPySfGSgtF":{"name":"programSetUniformMatrix(program:uniformLocation:dimensions:count:transpose:value:)","abstract":"<p>Changes the value of a matrix uniform, or uniform array in the"},"Functions.html#/s:4Cogl16programUniform1f9uniformNo5valueySi_SftF":{"name":"programUniform1f(uniformNo:value:)","abstract":"<p>Changes the value of a floating point uniform in the currently"},"Functions.html#/s:4Cogl16programUniform1i9uniformNo5valueySi_SitF":{"name":"programUniform1i(uniformNo:value:)","abstract":"<p>Changes the value of an integer uniform in the currently"},"Functions.html#/s:4Cogl19programUniformFloat9uniformNo4size5count5valueySi_S2iSPySfGSgtF":{"name":"programUniformFloat(uniformNo:size:count:value:)","abstract":"<p>Changes the value of a float vector uniform, or uniform array in the"},"Functions.html#/s:4Cogl17programUniformInt9uniformNo4size5count5valueySi_S2iSPys5Int32VGSgtF":{"name":"programUniformInt(uniformNo:size:count:value:)","abstract":"<p>Changes the value of a int vector uniform, or uniform array in the"},"Functions.html#/s:4Cogl20programUniformMatrix9uniformNo4size5count9transpose5valueySi_S2is5Int32VSPySfGSgtF":{"name":"programUniformMatrix(uniformNo:size:count:transpose:value:)","abstract":"<p>Changes the value of a matrix uniform, or uniform array in the"},"Functions.html#/s:4Cogl12programUnref6handleySv_tF":{"name":"programUnref(handle:)","abstract":"<p>Removes a reference to a program. If it was the last reference the"},"Functions.html#/s:4Cogl10programUse6handleySv_tF":{"name":"programUse(handle:)","abstract":"<p>Activate a specific shader program replacing that part of the GL"},"Functions.html#/s:4Cogl14pushDrawBufferyyF":{"name":"pushDrawBuffer()","abstract":"<p>Save <code>cogl_set_draw_buffer()</code> state.</p>"},"Functions.html#/s:4Cogl15pushFramebuffer6bufferySpySo01_A7TextureVGSg_tF":{"name":"pushFramebuffer(buffer:)","abstract":"<p>Redirects all subsequent drawing to the specified framebuffer. This can"},"Functions.html#/s:4Cogl10pushMatrixyyF":{"name":"pushMatrix()","abstract":"<p>Stores the current model-view matrix on the matrix stack. The matrix"},"Functions.html#/s:4Cogl10pushSource8materialySvSg_tF":{"name":"pushSource(material:)","abstract":"<p>Pushes the given <code>material</code> to the top of the source stack. The"},"Functions.html#/s:4Cogl10readPixels1x1y5width6height6source6format6pixelsySi_S3iAA04ReadC5FlagsVSo0A11PixelFormataSpys5UInt8VGSgtF":{"name":"readPixels(x:y:width:height:source:format:pixels:)","abstract":"<p>This reads a rectangle of pixels from the current framebuffer where"},"Functions.html#/s:4Cogl9rectangle2x12y12x22y2ySf_S3ftF":{"name":"rectangle(x1:y1:x2:y2:)","abstract":"<p>Fills a rectangle at the given coordinates with the current source material</p>"},"Functions.html#/s:4Cogl31rectangleWithMultitextureCoords2x12y12x22y203texE00jE3LenySf_S3fSPySfGSgSitF":{"name":"rectangleWithMultitextureCoords(x1:y1:x2:y2:texCoords:texCoordsLen:)","abstract":"<p>This function draws a rectangle using the current source material to"},"Functions.html#/s:4Cogl26rectangleWithTextureCoords2x12y12x22y23tx13ty13tx23ty2ySf_S7ftF":{"name":"rectangleWithTextureCoords(x1:y1:x2:y2:tx1:ty1:tx2:ty2:)","abstract":"<p>Draw a rectangle using the current material and supply texture coordinates"},"Functions.html#/s:4Cogl10rectangles5verts6nRectsySPySfGSg_SitF":{"name":"rectangles(verts:nRects:)","abstract":"<p>Draws a series of rectangles in the same way that"},"Functions.html#/s:4Cogl27rectanglesWithTextureCoords5verts6nRectsySPySfGSg_SitF":{"name":"rectanglesWithTextureCoords(verts:nRects:)","abstract":"<p>Draws a series of rectangles in the same way that"},"Functions.html#/s:4Cogl6rotate5angle1x1y1zySf_S3ftF":{"name":"rotate(angle:x:y:z:)","abstract":"<p>Multiplies the current model-view matrix by one that rotates the"},"Functions.html#/s:4Cogl5scale1x1y1zySf_S2ftF":{"name":"scale(x:y:z:)","abstract":"<p>Multiplies the current model-view matrix by one that scales the x,"},"Functions.html#/s:4Cogl25setBackfaceCullingEnabled7settingys5Int32V_tF":{"name":"setBackfaceCullingEnabled(setting:)","abstract":"<p>Sets whether textures positioned so that their backface is showing"},"Functions.html#/s:4Cogl19setDepthTestEnabled7settingys5Int32V_tF":{"name":"setDepthTestEnabled(setting:)","abstract":"<p>Sets whether depth testing is enabled. If it is disabled then the"},"Functions.html#/s:4Cogl13setDrawBuffer6target9offscreenyAA0D6TargetV_SvtF":{"name":"setDrawBuffer(target:offscreen:)","abstract":"<p>Redirects all subsequent drawing to the specified framebuffer. This"},"Functions.html#/s:4Cogl6setFog8fogColor4mode7density5zNear4zFaryx_So0aC4ModeaS3ftAA0E8ProtocolRzlF":{"name":"setFog(fogColor:mode:density:zNear:zFar:)","abstract":"<p>Enables fogging. Fogging causes vertices that are further away from the eye"},"Functions.html#/s:4Cogl14setFramebuffer6bufferySpySo01_A7TextureVGSg_tF":{"name":"setFramebuffer(buffer:)","abstract":"<p>This redirects all subsequent drawing to the specified framebuffer. This can"},"Functions.html#/s:4Cogl12setModelview6matrixyx_tAA14MatrixProtocolRzlF":{"name":"setModelview(matrix:)","abstract":"<p>Loads <code>matrix</code> as the new model-view matrix.</p>"},"Functions.html#/s:4Cogl13setProjection6matrixyx_tAA14MatrixProtocolRzlF":{"name":"setProjection(matrix:)","abstract":"<p>Loads matrix as the new projection matrix.</p>"},"Functions.html#/s:4Cogl9setSource8materialySvSg_tF":{"name":"setSource(material:)","abstract":"<p>This function changes the material at the top of the source stack."},"Functions.html#/s:4Cogl9setSource5coloryx_tAA13ColorProtocolRzlF":{"name":"setSource(color:)","abstract":"<p>This is a convenience function for creating a solid fill source material"},"Functions.html#/s:4Cogl16setSourceColor4f3red5green4blue5alphaySf_S3ftF":{"name":"setSourceColor4f(red:green:blue:alpha:)","abstract":"<p>This is a convenience function for creating a solid fill source material"},"Functions.html#/s:4Cogl17setSourceColor4ub3red5green4blue5alphays5UInt8V_A3HtF":{"name":"setSourceColor4ub(red:green:blue:alpha:)","abstract":"<p>This is a convenience function for creating a solid fill source material"},"Functions.html#/s:4Cogl9setSource7textureyx_tAA15TextureProtocolRzlF":{"name":"setSource(texture:)","abstract":"<p>This is a convenience function for creating a material with the first"},"Functions.html#/s:4Cogl11setViewport1x1y5width6heightySi_S3itF":{"name":"setViewport(x:y:width:height:)","abstract":"<p>Replaces the current viewport with the given values.</p>"},"Functions.html#/s:4Cogl13shaderCompile6handleySv_tF":{"name":"shaderCompile(handle:)","abstract":"<p>Compiles the shader, no return value, but the shader is now ready"},"Functions.html#/s:4Cogl16shaderGetInfoLog6handleSSSgSv_tF":{"name":"shaderGetInfoLog(handle:)","abstract":"<p>Retrieves the information log for a coglobject, can be used in conjunction"},"Functions.html#/s:4Cogl13shaderGetType6handleSo0a6ShaderD0aSv_tF":{"name":"shaderGetType(handle:)","abstract":"<p>Retrieves the type of a shader <code>CoglHandle</code></p>"},"Functions.html#/s:4Cogl16shaderIsCompiled6handles5Int32VSv_tF":{"name":"shaderIsCompiled(handle:)","abstract":"<p>Retrieves whether a shader <code>CoglHandle</code> has been compiled</p>"},"Functions.html#/s:4Cogl9shaderRef6handleSvSgSv_tF":{"name":"shaderRef(handle:)","abstract":"<p>Add an extra reference to a shader.</p>"},"Functions.html#/s:4Cogl12shaderSource0B06sourceySv_SPys4Int8VGSgtF":{"name":"shaderSource(shader:source:)","abstract":"<p>Replaces the current source associated with a shader with a new"},"Functions.html#/s:4Cogl11shaderUnref6handleySv_tF":{"name":"shaderUnref(handle:)","abstract":"<p>Removes a reference to a shader. If it was the last reference the"},"Functions.html#/s:4Cogl5sqrti1xS2i_tF":{"name":"sqrti(x:)","abstract":"<p>Very fast fixed point implementation of square root for integers.</p>"},"Functions.html#/s:4Cogl17textureErrorQuarks6UInt32VyF":{"name":"textureErrorQuark()","abstract":"<p>Undocumented</p>"},"Functions.html#/s:4Cogl10textureRef0B0SvSgAD_tF":{"name":"textureRef(texture:)","abstract":"<p>Increment the reference count for a cogl texture.</p>"},"Functions.html#/s:4Cogl12textureUnref0B0ySvSg_tF":{"name":"textureUnref(texture:)","abstract":"<p>Decrement the reference count for a cogl texture.</p>"},"Functions.html#/s:4Cogl9transform6matrixyx_tAA14MatrixProtocolRzlF":{"name":"transform(matrix:)","abstract":"<p>Multiplies the current model-view matrix by the given matrix.</p>"},"Functions.html#/s:4Cogl9translate1x1y1zySf_S2ftF":{"name":"translate(x:y:z:)","abstract":"<p>Multiplies the current model-view matrix by one that translates the"},"Functions.html#/s:4Cogl15vertexBufferAdd6handle13attributeName11nComponents4type10normalized6stride7pointerySv_SPys4Int8VGSgs5UInt8VSo0A13AttributeTypeas5Int32Vs6UInt16VSvSgtF":{"name":"vertexBufferAdd(handle:attributeName:nComponents:type:normalized:stride:pointer:)","abstract":"<p>Adds an attribute to a buffer, or replaces a previously added"},"Functions.html#/s:4Cogl18vertexBufferDelete6handle13attributeNameySv_SPys4Int8VGSgtF":{"name":"vertexBufferDelete(handle:attributeName:)","abstract":"<p>Deletes an attribute from a buffer. You will need to call"},"Functions.html#/s:4Cogl19vertexBufferDisable6handle13attributeNameySv_SPys4Int8VGSgtF":{"name":"vertexBufferDisable(handle:attributeName:)","abstract":"<p>Disables a previosuly added attribute.</p>"},"Functions.html#/s:4Cogl16vertexBufferDraw6handle4mode5first5countySv_So0A12VerticesModeaS2itF":{"name":"vertexBufferDraw(handle:mode:first:count:)","abstract":"<p>Allows you to draw geometry using all or a subset of the"},"Functions.html#/s:4Cogl24vertexBufferDrawElements6handle4mode7indices8minIndex03maxJ00H6Offset5countySv_So0A12VerticesModeaSvS4itF":{"name":"vertexBufferDrawElements(handle:mode:indices:minIndex:maxIndex:indicesOffset:count:)","abstract":"<p>This function lets you use an array of indices to specify the vertices"},"Functions.html#/s:4Cogl18vertexBufferEnable6handle13attributeNameySv_SPys4Int8VGSgtF":{"name":"vertexBufferEnable(handle:attributeName:)","abstract":"<p>Enables a previosuly disabled attribute.</p>"},"Functions.html#/s:4Cogl24vertexBufferGetNVertices6handleSiSv_tF":{"name":"vertexBufferGetNVertices(handle:)","abstract":"<p>Retrieves the number of vertices that <code>handle</code> represents</p>"},"Functions.html#/s:4Cogl30vertexBufferIndicesGetForQuads01nD0SvSgSi_tF":{"name":"vertexBufferIndicesGetForQuads(nIndices:)","abstract":"<p>Creates a vertex buffer containing the indices needed to draw pairs"},"Functions.html#/s:4Cogl26vertexBufferIndicesGetType7indicesSo0adF0aSv_tF":{"name":"vertexBufferIndicesGetType(indices:)","abstract":"<p>Queries back the data type used for the given indices</p>"},"Functions.html#/s:4Cogl22vertexBufferIndicesNew11indicesType0F5Array0F3LenSvSgSo0adG0a_AFSitF":{"name":"vertexBufferIndicesNew(indicesType:indicesArray:indicesLen:)","abstract":"<p>Depending on how much geometry you are submitting it can be worthwhile"},"Functions.html#/s:4Cogl15vertexBufferNew9nVerticesSvSgSi_tF":{"name":"vertexBufferNew(nVertices:)","abstract":"<p>Creates a new vertex buffer that you can use to add attributes.</p>"},"Functions.html#/s:4Cogl15vertexBufferRef6handleSvSgSv_tF":{"name":"vertexBufferRef(handle:)","abstract":"<p>Increment the reference count for a vertex buffer</p>"},"Functions.html#/s:4Cogl18vertexBufferSubmit6handleySv_tF":{"name":"vertexBufferSubmit(handle:)","abstract":"<p>Submits all the user added attributes to the GPU; once submitted, the"},"Functions.html#/s:4Cogl17vertexBufferUnref6handleySv_tF":{"name":"vertexBufferUnref(handle:)","abstract":"<p>Decrement the reference count for a vertex buffer</p>"},"Functions.html#/s:4Cogl8viewport5width6heightySi_SitF":{"name":"viewport(width:height:)","abstract":"<p>Replace the current viewport with the given values.</p>"},"Functions.html#/s:4Cogl3sinys5Int32VADF":{"name":"sin(_:)","abstract":"<p>Calculate the sine of the given angle in fixed-point notation</p>"},"Functions.html#/s:4Cogl3cosys5Int32VADF":{"name":"cos(_:)","abstract":"<p>Calculate the cosine of the given angle in fixed-point notation</p>"},"Functions.html#/s:4Cogl3tanys5Int32VADF":{"name":"tan(_:)","abstract":"<p>Calculate the tangent of the given angle in fixed-point notation</p>"},"Functions.html#/s:4Cogl4atanys5Int32VADF":{"name":"atan(_:)","abstract":"<p>Calculate computes the principal value of the arc tangent of <code>a</code> in fixed point notation</p>"},"Functions.html#/s:4Cogl5atan2ys5Int32VAD_ADtF":{"name":"atan2(_:_:)","abstract":"<p>Compute the principal value in fixed point notation"},"Functions.html#/s:4Cogl3mulys5Int32VAD_ADtF":{"name":"mul(_:_:)","abstract":"<p>Multiply two fixed-point numbers.</p>"},"Functions.html#/s:4Cogl3divys5Int32VAD_ADtF":{"name":"div(_:_:)","abstract":"<p>Divide two fixed-point numbers.</p>"},"Functions.html#/s:4Cogl7mul_divys5Int32VAD_A2DtF":{"name":"mul_div(_:_:_:)","abstract":"<p>Multiplies two fixed-point values and then divide the result"},"Functions.html#/s:4Cogl4sqrtys5Int32VADF":{"name":"sqrt(_:)","abstract":"<p>Calculate the square root of a fixed-point number</p>"},"Functions.html#/s:4Cogl4log2ys5Int32VSiF":{"name":"log2(_:)","abstract":"<p>Calculate the base-2 logarithm of a given, positive integer as a fixed-point number.</p>"},"Functions.html#/s:4Cogl4pow2ySis5Int32VF":{"name":"pow2(_:)","abstract":"<p>Calculate the integral pow(2, a) of a given fixed-point number.</p>"},"Functions.html#/s:4Cogl3powyS2i_s5Int32VtF":{"name":"pow(_:_:)","abstract":"<p>Calculate x to the power of a.</p>"},"Extensions/Fixed.html#/s:s5Int32V4CoglE11doubleValueABSd_tcfc":{"name":"init(doubleValue:)","abstract":"<p>Create a fixed-point number from a Double</p>","parent_name":"Fixed"},"Extensions/Fixed.html#/s:s5Int32V4CoglE10floatValueABSf_tcfc":{"name":"init(floatValue:)","abstract":"<p>Create a fixed-point number from a Float</p>","parent_name":"Fixed"},"Extensions/Fixed.html#/s:s5Int32V4CoglE8intValueABSi_tcfc":{"name":"init(intValue:)","abstract":"<p>Create a fixed-point number from an Int</p>","parent_name":"Fixed"},"Extensions/Fixed.html#/s:s5Int32V4CoglE8intValueSivp":{"name":"intValue","abstract":"<p>Truncated integer representation of the fixed-point value</p>","parent_name":"Fixed"},"Extensions/Fixed.html#/s:s5Int32V4CoglE11doubleValueSdvp":{"name":"doubleValue","abstract":"<p>Double precision representation of the fixed-point value</p>","parent_name":"Fixed"},"Extensions/Fixed.html#/s:s5Int32V4CoglE004nlChABvpZ":{"name":"𝜀","abstract":"<p>Smallest possible number greater than zero expressed as a fixed-point number.</p>","parent_name":"Fixed"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E16multipleOnscreenABvpZ":{"name":"multipleOnscreen","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E12swapThrottleABvpZ":{"name":"swapThrottle","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E13vblankCounterABvpZ":{"name":"vblankCounter","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E10vblankWaitABvpZ":{"name":"vblankWait","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E17textureFromPixmapABvpZ":{"name":"textureFromPixmap","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E16swapBuffersEventABvpZ":{"name":"swapBuffersEvent","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E10swapRegionABvpZ":{"name":"swapRegion","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E18swapRegionThrottleABvpZ":{"name":"swapRegionThrottle","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E22swapRegionSynchronizedABvpZ":{"name":"swapRegionSynchronized","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E9bufferAgeABvpZ":{"name":"bufferAge","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E20syncAndCompleteEventABvpZ":{"name":"syncAndCompleteEvent","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/WinsysFeature.html#/s:So18_CoglWinsysFeatureV0A0E9nFeaturesABvpZ":{"name":"nFeatures","abstract":"<p>Undocumented</p>","parent_name":"WinsysFeature"},"Extensions/Winding.html#/s:So11CoglWindinga0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"Winding"},"Extensions/Winding.html#/s:So11CoglWindinga0A0E9clockwiseABvpZ":{"name":"clockwise","abstract":"<p>Vertices are in a clockwise order</p>","parent_name":"Winding"},"Extensions/Winding.html#/s:So11CoglWindinga0A0E16counterClockwiseABvpZ":{"name":"counterClockwise","abstract":"<p>Vertices are in a counter-clockwise order</p>","parent_name":"Winding"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E6pointsABvpZ":{"name":"points","abstract":"<p>FIXME, equivalent to","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E5linesABvpZ":{"name":"lines","abstract":"<p>FIXME, equivalent to &lt;constant&gt;GL_LINES&lt;/constant&gt;</p>","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E8lineLoopABvpZ":{"name":"lineLoop","abstract":"<p>FIXME, equivalent to","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E9lineStripABvpZ":{"name":"lineStrip","abstract":"<p>FIXME, equivalent to","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E9trianglesABvpZ":{"name":"triangles","abstract":"<p>FIXME, equivalent to","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E13triangleStripABvpZ":{"name":"triangleStrip","abstract":"<p>FIXME, equivalent to","parent_name":"VerticesMode"},"Extensions/VerticesMode.html#/s:So16CoglVerticesModea0A0E11triangleFanABvpZ":{"name":"triangleFan","abstract":"<p>FIXME, equivalent to &lt;constant&gt;GL_TRIANGLE_FAN&lt;/constant&gt;</p>","parent_name":"VerticesMode"},"Extensions/TextureType.html#/s:So15CoglTextureTypea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"TextureType"},"Extensions/TextureType.html#/s:So15CoglTextureTypea0A0E3_2dABvpZ":{"name":"_2d","abstract":"<p>A <code>CoglTexture2D</code></p>","parent_name":"TextureType"},"Extensions/TextureType.html#/s:So15CoglTextureTypea0A0E3_3dABvpZ":{"name":"_3d","abstract":"<p>A <code>CoglTexture3D</code></p>","parent_name":"TextureType"},"Extensions/TextureType.html#/s:So15CoglTextureTypea0A0E9rectangleABvpZ":{"name":"rectangle","abstract":"<p>A <code>CoglTextureRectangle</code></p>","parent_name":"TextureType"},"Extensions/TextureError.html#/s:So16CoglTextureErrora0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"TextureError"},"Extensions/TextureError.html#/s:So16CoglTextureErrora0A0E4sizeABvpZ":{"name":"size","abstract":"<p>Unsupported size</p>","parent_name":"TextureError"},"Extensions/TextureError.html#/s:So16CoglTextureErrora0A0E6formatABvpZ":{"name":"format","abstract":"<p>Unsupported format</p>","parent_name":"TextureError"},"Extensions/TextureError.html#/s:So16CoglTextureErrora0A0E12badParameterABvpZ":{"name":"badParameter","abstract":"<p>Undocumented</p>","parent_name":"TextureError"},"Extensions/TextureError.html#/s:So16CoglTextureErrora0A0E4typeABvpZ":{"name":"type","abstract":"<p>A primitive texture type that is","parent_name":"TextureError"},"Extensions/TextureComponents.html#/s:So22_CoglTextureComponentsV0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"TextureComponents"},"Extensions/TextureComponents.html#/s:So22_CoglTextureComponentsV0A0E1aABvpZ":{"name":"a","abstract":"<p>Only the alpha component</p>","parent_name":"TextureComponents"},"Extensions/TextureComponents.html#/s:So22_CoglTextureComponentsV0A0E2rgABvpZ":{"name":"rg","abstract":"<p>Red and green components. Note that","parent_name":"TextureComponents"},"Extensions/TextureComponents.html#/s:So22_CoglTextureComponentsV0A0E3rgbABvpZ":{"name":"rgb","abstract":"<p>Red, green and blue components</p>","parent_name":"TextureComponents"},"Extensions/TextureComponents.html#/s:So22_CoglTextureComponentsV0A0E4rgbaABvpZ":{"name":"rgba","abstract":"<p>Red, green, blue and alpha components</p>","parent_name":"TextureComponents"},"Extensions/TextureComponents.html#/s:So22_CoglTextureComponentsV0A0E5depthABvpZ":{"name":"depth","abstract":"<p>Only a depth component</p>","parent_name":"TextureComponents"},"Extensions/SystemError.html#/s:So15CoglSystemErrora0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"SystemError"},"Extensions/SystemError.html#/s:So15CoglSystemErrora0A0E04coglbC11UnsupportedABvpZ":{"name":"coglSystemErrorUnsupported","abstract":"<p>You tried to use a feature or","parent_name":"SystemError"},"Extensions/SystemError.html#/s:So15CoglSystemErrora0A0E04coglbC8NoMemoryABvpZ":{"name":"coglSystemErrorNoMemory","abstract":"<p>You tried to allocate a resource","parent_name":"SystemError"},"Extensions/StereoMode.html#/s:So14CoglStereoModea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"StereoMode"},"Extensions/StereoMode.html#/s:So14CoglStereoModea0A0E4bothABvpZ":{"name":"both","abstract":"<p>draw to both stereo buffers</p>","parent_name":"StereoMode"},"Extensions/StereoMode.html#/s:So14CoglStereoModea0A0E4leftABvpZ":{"name":"left","abstract":"<p>draw only to the left stereo buffer</p>","parent_name":"StereoMode"},"Extensions/StereoMode.html#/s:So14CoglStereoModea0A0E5rightABvpZ":{"name":"right","abstract":"<p>draw only to the left stereo buffer</p>","parent_name":"StereoMode"},"Extensions/ShaderType.html#/s:So14CoglShaderTypea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"ShaderType"},"Extensions/ShaderType.html#/s:So14CoglShaderTypea0A0E6vertexABvpZ":{"name":"vertex","abstract":"<p>A program for proccessing vertices</p>","parent_name":"ShaderType"},"Extensions/ShaderType.html#/s:So14CoglShaderTypea0A0E8fragmentABvpZ":{"name":"fragment","abstract":"<p>A program for processing fragments</p>","parent_name":"ShaderType"},"Extensions/RendererError.html#/s:So17CoglRendererErrora0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"RendererError"},"Extensions/RendererError.html#/s:So17CoglRendererErrora0A0E15xlibDisplayOpenABvpZ":{"name":"xlibDisplayOpen","abstract":"<p>Undocumented</p>","parent_name":"RendererError"},"Extensions/RendererError.html#/s:So17CoglRendererErrora0A0E13badConstraintABvpZ":{"name":"badConstraint","abstract":"<p>Undocumented</p>","parent_name":"RendererError"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E3anyABvpZ":{"name":"any","abstract":"<p>Any format</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E2a8ABvpZ":{"name":"a8","abstract":"<p>8 bits alpha mask</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E6rgb565ABvpZ":{"name":"rgb565","abstract":"<p>RGB, 16 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E8rgba4444ABvpZ":{"name":"rgba4444","abstract":"<p>RGBA, 16 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E8rgba5551ABvpZ":{"name":"rgba5551","abstract":"<p>RGBA, 16 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E3yuvABvpZ":{"name":"yuv","abstract":"<p>Not currently supported</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E2g8ABvpZ":{"name":"g8","abstract":"<p>Single luminance component</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E4rg88ABvpZ":{"name":"rg88","abstract":"<p>RG, 16 bits. Note that red-green textures","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E6rgb888ABvpZ":{"name":"rgb888","abstract":"<p>RGB, 24 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E6bgr888ABvpZ":{"name":"bgr888","abstract":"<p>BGR, 24 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E8rgba8888ABvpZ":{"name":"rgba8888","abstract":"<p>RGBA, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E8bgra8888ABvpZ":{"name":"bgra8888","abstract":"<p>BGRA, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E8argb8888ABvpZ":{"name":"argb8888","abstract":"<p>ARGB, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E8abgr8888ABvpZ":{"name":"abgr8888","abstract":"<p>ABGR, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11rgba1010102ABvpZ":{"name":"rgba1010102","abstract":"<p>RGBA, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11bgra1010102ABvpZ":{"name":"bgra1010102","abstract":"<p>BGRA, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11argb2101010ABvpZ":{"name":"argb2101010","abstract":"<p>ARGB, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11abgr2101010ABvpZ":{"name":"abgr2101010","abstract":"<p>ABGR, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11rgba8888PreABvpZ":{"name":"rgba8888Pre","abstract":"<p>Premultiplied RGBA, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11bgra8888PreABvpZ":{"name":"bgra8888Pre","abstract":"<p>Premultiplied BGRA, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11argb8888PreABvpZ":{"name":"argb8888Pre","abstract":"<p>Premultiplied ARGB, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11abgr8888PreABvpZ":{"name":"abgr8888Pre","abstract":"<p>Premultiplied ABGR, 32 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11rgba4444PreABvpZ":{"name":"rgba4444Pre","abstract":"<p>Premultiplied RGBA, 16 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E11rgba5551PreABvpZ":{"name":"rgba5551Pre","abstract":"<p>Premultiplied RGBA, 16 bits</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E14rgba1010102PreABvpZ":{"name":"rgba1010102Pre","abstract":"<p>Premultiplied RGBA, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E14bgra1010102PreABvpZ":{"name":"bgra1010102Pre","abstract":"<p>Premultiplied BGRA, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E14argb2101010PreABvpZ":{"name":"argb2101010Pre","abstract":"<p>Premultiplied ARGB, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E14abgr2101010PreABvpZ":{"name":"abgr2101010Pre","abstract":"<p>Premultiplied ABGR, 32 bits, 10 bpc</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E7depth16ABvpZ":{"name":"depth16","abstract":"<p>Undocumented</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E7depth32ABvpZ":{"name":"depth32","abstract":"<p>Undocumented</p>","parent_name":"PixelFormat"},"Extensions/PixelFormat.html#/s:So15CoglPixelFormata0A0E15depth24Stencil8ABvpZ":{"name":"depth24Stencil8","abstract":"<p>Undocumented</p>","parent_name":"PixelFormat"},"Extensions/MaterialWrapMode.html#/s:So20CoglMaterialWrapModea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"MaterialWrapMode"},"Extensions/MaterialWrapMode.html#/s:So20CoglMaterialWrapModea0A0E6repeatABvpZ":{"name":"repeat","abstract":"<p>The texture will be repeated. This","parent_name":"MaterialWrapMode"},"Extensions/MaterialWrapMode.html#/s:So20CoglMaterialWrapModea0A0E11clampToEdgeABvpZ":{"name":"clampToEdge","abstract":"<p>The coordinates outside the","parent_name":"MaterialWrapMode"},"Extensions/MaterialWrapMode.html#/s:So20CoglMaterialWrapModea0A0E9automaticABvpZ":{"name":"automatic","abstract":"<p>Cogl will try to automatically","parent_name":"MaterialWrapMode"},"Extensions/MaterialLayerType.html#/s:So21CoglMaterialLayerTypea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"MaterialLayerType"},"Extensions/MaterialLayerType.html#/s:So21CoglMaterialLayerTypea0A0E7textureABvpZ":{"name":"texture","abstract":"<p>The layer represents a","parent_name":"MaterialLayerType"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"MaterialFilter"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0E7nearestABvpZ":{"name":"nearest","abstract":"<p>Measuring in manhatten distance from the,","parent_name":"MaterialFilter"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0E6linearABvpZ":{"name":"linear","abstract":"<p>Use the weighted average of the 4 texels","parent_name":"MaterialFilter"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0E20nearestMipmapNearestABvpZ":{"name":"nearestMipmapNearest","abstract":"<p>Select the mimap level whose","parent_name":"MaterialFilter"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0E19linearMipmapNearestABvpZ":{"name":"linearMipmapNearest","abstract":"<p>Select the mimap level whose","parent_name":"MaterialFilter"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0E19nearestMipmapLinearABvpZ":{"name":"nearestMipmapLinear","abstract":"<p>Select the two mimap levels","parent_name":"MaterialFilter"},"Extensions/MaterialFilter.html#/s:So18CoglMaterialFiltera0A0E18linearMipmapLinearABvpZ":{"name":"linearMipmapLinear","abstract":"<p>Select the two mimap levels","parent_name":"MaterialFilter"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E5neverABvpZ":{"name":"never","abstract":"<p>Never let the fragment through.</p>","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E4lessABvpZ":{"name":"less","abstract":"<p>Let the fragment through if the incoming","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E5equalABvpZ":{"name":"equal","abstract":"<p>Let the fragment through if the incoming","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E6lequalABvpZ":{"name":"lequal","abstract":"<p>Let the fragment through if the incoming","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E7greaterABvpZ":{"name":"greater","abstract":"<p>Let the fragment through if the incoming","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E8notequalABvpZ":{"name":"notequal","abstract":"<p>Let the fragment through if the incoming","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E6gequalABvpZ":{"name":"gequal","abstract":"<p>Let the fragment through if the incoming","parent_name":"MaterialAlphaFunc"},"Extensions/MaterialAlphaFunc.html#/s:So21CoglMaterialAlphaFunca0A0E6alwaysABvpZ":{"name":"always","abstract":"<p>Always let the fragment through.</p>","parent_name":"MaterialAlphaFunc"},"Extensions/IndicesType.html#/s:So15CoglIndicesTypea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"IndicesType"},"Extensions/IndicesType.html#/s:So15CoglIndicesTypea0A0E4byteABvpZ":{"name":"byte","abstract":"<p>Your indices are unsigned bytes</p>","parent_name":"IndicesType"},"Extensions/IndicesType.html#/s:So15CoglIndicesTypea0A0E5shortABvpZ":{"name":"short","abstract":"<p>Your indices are unsigned shorts</p>","parent_name":"IndicesType"},"Extensions/IndicesType.html#/s:So15CoglIndicesTypea0A0E3intABvpZ":{"name":"int","abstract":"<p>Your indices are unsigned ints</p>","parent_name":"IndicesType"},"Extensions/FogMode.html#/s:So11CoglFogModea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"FogMode"},"Extensions/FogMode.html#/s:So11CoglFogModea0A0E6linearABvpZ":{"name":"linear","abstract":"<p>Calculates the fog blend factor as:</p>","parent_name":"FogMode"},"Extensions/FogMode.html#/s:So11CoglFogModea0A0E11exponentialABvpZ":{"name":"exponential","abstract":"<p>Calculates the fog blend factor as:</p>","parent_name":"FogMode"},"Extensions/FogMode.html#/s:So11CoglFogModea0A0E18exponentialSquaredABvpZ":{"name":"exponentialSquared","abstract":"<p>Calculates the fog blend factor as:</p>","parent_name":"FogMode"},"Extensions/FilterReturn.html#/s:So17_CoglFilterReturnV0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"FilterReturn"},"Extensions/FilterReturn.html#/s:So17_CoglFilterReturnV0A0E8continueABvpZ":{"name":"continue","abstract":"<p>The event was not handled, continues the","parent_name":"FilterReturn"},"Extensions/FilterReturn.html#/s:So17_CoglFilterReturnV0A0E6removeABvpZ":{"name":"remove","abstract":"<p>Remove the event, stops the processing</p>","parent_name":"FilterReturn"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E5neverABvpZ":{"name":"never","abstract":"<p>Never passes.</p>","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E4lessABvpZ":{"name":"less","abstract":"<p>Passes if the fragment&rsquo;s depth","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E5equalABvpZ":{"name":"equal","abstract":"<p>Passes if the fragment&rsquo;s depth","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E6lequalABvpZ":{"name":"lequal","abstract":"<p>Passes if the fragment&rsquo;s depth","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E7greaterABvpZ":{"name":"greater","abstract":"<p>Passes if the fragment&rsquo;s depth","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E8notequalABvpZ":{"name":"notequal","abstract":"<p>Passes if the fragment&rsquo;s depth","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E6gequalABvpZ":{"name":"gequal","abstract":"<p>Passes if the fragment&rsquo;s depth","parent_name":"DepthTestFunction"},"Extensions/DepthTestFunction.html#/s:So21CoglDepthTestFunctiona0A0E6alwaysABvpZ":{"name":"always","abstract":"<p>Always passes.</p>","parent_name":"DepthTestFunction"},"Extensions/BlendStringError.html#/s:So20CoglBlendStringErrora0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"BlendStringError"},"Extensions/BlendStringError.html#/s:So20CoglBlendStringErrora0A0E05parseD0ABvpZ":{"name":"parseError","abstract":"<p>Generic parse error</p>","parent_name":"BlendStringError"},"Extensions/BlendStringError.html#/s:So20CoglBlendStringErrora0A0E013argumentParseD0ABvpZ":{"name":"argumentParseError","abstract":"<p>Argument parse error</p>","parent_name":"BlendStringError"},"Extensions/BlendStringError.html#/s:So20CoglBlendStringErrora0A0E07invalidD0ABvpZ":{"name":"invalidError","abstract":"<p>Internal parser error</p>","parent_name":"BlendStringError"},"Extensions/BlendStringError.html#/s:So20CoglBlendStringErrora0A0E014gpuUnsupportedD0ABvpZ":{"name":"gpuUnsupportedError","abstract":"<p>Blend string not","parent_name":"BlendStringError"},"Extensions/BitmapError.html#/s:So15CoglBitmapErrora0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"BitmapError"},"Extensions/BitmapError.html#/s:So15CoglBitmapErrora0A0E6failedABvpZ":{"name":"failed","abstract":"<p>Generic failure code, something went","parent_name":"BitmapError"},"Extensions/BitmapError.html#/s:So15CoglBitmapErrora0A0E11unknownTypeABvpZ":{"name":"unknownType","abstract":"<p>Unknown image type.</p>","parent_name":"BitmapError"},"Extensions/BitmapError.html#/s:So15CoglBitmapErrora0A0E12corruptImageABvpZ":{"name":"corruptImage","abstract":"<p>An image file was broken somehow.</p>","parent_name":"BitmapError"},"Extensions/AttributeType.html#/s:So17CoglAttributeTypea0A0EyABSgxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Cast constructor, converting any binary integer to a","parent_name":"AttributeType"},"Extensions/AttributeType.html#/s:So17CoglAttributeTypea0A0E4byteABvpZ":{"name":"byte","abstract":"<p>Data is the same size of a byte</p>","parent_name":"AttributeType"},"Extensions/AttributeType.html#/s:So17CoglAttributeTypea0A0E12unsignedByteABvpZ":{"name":"unsignedByte","abstract":"<p>Data is the same size of an","parent_name":"AttributeType"},"Extensions/AttributeType.html#/s:So17CoglAttributeTypea0A0E5shortABvpZ":{"name":"short","abstract":"<p>Data is the same size of a short integer</p>","parent_name":"AttributeType"},"Extensions/AttributeType.html#/s:So17CoglAttributeTypea0A0E13unsignedShortABvpZ":{"name":"unsignedShort","abstract":"<p>Data is the same size of","parent_name":"AttributeType"},"Extensions/AttributeType.html#/s:So17CoglAttributeTypea0A0E5floatABvpZ":{"name":"float","abstract":"<p>Data is the same size of a float</p>","parent_name":"AttributeType"},"Extensions/AttributeType.html":{"name":"AttributeType"},"Extensions/BitmapError.html":{"name":"BitmapError"},"Extensions/BlendStringError.html":{"name":"BlendStringError"},"Extensions/DepthTestFunction.html":{"name":"DepthTestFunction"},"Extensions/FilterReturn.html":{"name":"FilterReturn"},"Extensions/FogMode.html":{"name":"FogMode"},"Extensions/IndicesType.html":{"name":"IndicesType"},"Extensions/MaterialAlphaFunc.html":{"name":"MaterialAlphaFunc"},"Extensions/MaterialFilter.html":{"name":"MaterialFilter"},"Extensions/MaterialLayerType.html":{"name":"MaterialLayerType"},"Extensions/MaterialWrapMode.html":{"name":"MaterialWrapMode"},"Extensions/PixelFormat.html":{"name":"PixelFormat"},"Extensions/RendererError.html":{"name":"RendererError","abstract":"<p>Undocumented</p>"},"Extensions/ShaderType.html":{"name":"ShaderType"},"Extensions/StereoMode.html":{"name":"StereoMode"},"Extensions/SystemError.html":{"name":"SystemError"},"Extensions/TextureComponents.html":{"name":"TextureComponents"},"Extensions/TextureError.html":{"name":"TextureError"},"Extensions/TextureType.html":{"name":"TextureType"},"Extensions/VerticesMode.html":{"name":"VerticesMode"},"Extensions/Winding.html":{"name":"Winding"},"Extensions/WinsysFeature.html":{"name":"WinsysFeature","abstract":"<p>Undocumented</p>"},"Extensions/Fixed.html":{"name":"Fixed","abstract":"<p>Some convenience methods for the fixed-point type</p>"},"Global%20Variables.html#/s:4Cogl10AFIRST_BITs5Int32Vvp":{"name":"AFIRST_BIT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Cogl5A_BITs5Int32Vvp":{"name":"A_BIT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Cogl7BGR_BITs5Int32Vvp":{"name":"BGR_BIT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Cogl9DEPTH_BITs5Int32Vvp":{"name":"DEPTH_BIT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Cogl9FIXED_0_5s5Int32Vvp":{"name":"FIXED_0_5","abstract":"<p>The number 0.5 expressed as a <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl7FIXED_1Sivp":{"name":"FIXED_1","abstract":"<p>The number 1 expressed as a <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl10FIXED_2_PIs5Int32Vvp":{"name":"FIXED_2_PI","abstract":"<p>Two times pi, expressed as a <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl10FIXED_BITSs5Int32Vvp":{"name":"FIXED_BITS","abstract":"<p>Evaluates to the number of bits used by the <code>CoglFixed</code> type.</p>"},"Global%20Variables.html#/s:4Cogl13FIXED_EPSILONs5Int32Vvp":{"name":"FIXED_EPSILON","abstract":"<p>A very small number expressed as a <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl9FIXED_MAXs5Int32Vvp":{"name":"FIXED_MAX","abstract":"<p>The biggest number representable using <code>CoglFixed</code></p>"},"Global%20Variables.html#/s:4Cogl9FIXED_MINs6UInt32Vvp":{"name":"FIXED_MIN","abstract":"<p>The smallest number representable using <code>CoglFixed</code></p>"},"Global%20Variables.html#/s:4Cogl8FIXED_PIs5Int32Vvp":{"name":"FIXED_PI","abstract":"<p>The number pi, expressed as a <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl10FIXED_PI_2s5Int32Vvp":{"name":"FIXED_PI_2","abstract":"<p>Half pi, expressed as a <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl10FIXED_PI_4s5Int32Vvp":{"name":"FIXED_PI_4","abstract":"<p>pi / 4, expressed as <code>CoglFixed</code> number.</p>"},"Global%20Variables.html#/s:4Cogl7FIXED_QSivp":{"name":"FIXED_Q","abstract":"<p>Evaluates to the number of bits used for the non-integer part"},"Global%20Variables.html#/s:4Cogl11PREMULT_BITs5Int32Vvp":{"name":"PREMULT_BIT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Cogl18RADIANS_TO_DEGREESs5Int32Vvp":{"name":"RADIANS_TO_DEGREES","abstract":"<p>Evaluates to 180 / pi in fixed point notation.</p>"},"Global%20Variables.html#/s:4Cogl20SQRTI_ARG_10_PERCENTs5Int32Vvp":{"name":"SQRTI_ARG_10_PERCENT","abstract":"<p>Maximum argument that can be passed to <code>cogl_sqrti()</code> for which the"},"Global%20Variables.html#/s:4Cogl19SQRTI_ARG_5_PERCENTs5Int32Vvp":{"name":"SQRTI_ARG_5_PERCENT","abstract":"<p>Maximum argument that can be passed to <code>cogl_sqrti()</code> for which the"},"Global%20Variables.html#/s:4Cogl13SQRTI_ARG_MAXs5Int32Vvp":{"name":"SQRTI_ARG_MAX","abstract":"<p>Maximum argument that can be passed to <code>cogl_sqrti()</code> function.</p>"},"Global%20Variables.html#/s:4Cogl11STENCIL_BITs5Int32Vvp":{"name":"STENCIL_BIT","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Cogl17TEXTURE_MAX_WASTEs5Int32Vvp":{"name":"TEXTURE_MAX_WASTE","abstract":"<p>Undocumented</p>"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">_CoglTextureVertexSizeCheck</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckCyACSpySo01_abcdE0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckCyACSPySo01_abcdE0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckCyACSgSPySo01_abcdE0aGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckCyACSgSpySo01_abcdE0aGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC9retainingACSpySo01_abcdE0aG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckCyACxcAA01_bcdE8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_TextureVertexSizeCheckProtocol.html\">_TextureVertexSizeCheckProtocol</a></code>","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC13opaquePointerACs06OpaqueG0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_TextureVertexSizeCheck.html#/s:4Cogl23_TextureVertexSizeCheckC22retainingOpaquePointerACs0gH0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_TextureVertexSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">_CoglMatrixSizeCheck</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckCyACSpySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckCyACSPySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckCyACSgSPySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckCyACSgSpySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC9retainingACSpySo01_abcD0aG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckCyACxcAA01_bcD8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_MatrixSizeCheckProtocol.html\">_MatrixSizeCheckProtocol</a></code>","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC13opaquePointerACs06OpaqueF0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_MatrixSizeCheck.html#/s:4Cogl16_MatrixSizeCheckC22retainingOpaquePointerACs0fG0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_MatrixSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">_CoglColorSizeCheck</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckCyACSpySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckCyACSPySo01_abcD0aGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckCyACSgSPySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckCyACSgSpySo01_abcD0aGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC9retainingACSpySo01_abcD0aG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckCyACxcAA01_bcD8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_ColorSizeCheckProtocol.html\">_ColorSizeCheckProtocol</a></code>","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC13opaquePointerACs06OpaqueF0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"_ColorSizeCheck"},"Classes/_ColorSizeCheck.html#/s:4Cogl15_ColorSizeCheckC22retainingOpaquePointerACs0fG0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"_ColorSizeCheck"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglTextureVertex</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexCyACSpySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexCyACSPySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexCyACSgSPySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexCyACSgSpySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC9retainingACSpySo01_abC0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexCyACxcAA0bC8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TextureVertexProtocol.html\">TextureVertexProtocol</a></code>","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"TextureVertex"},"Classes/TextureVertex.html#/s:4Cogl13TextureVertexC22retainingOpaquePointerACs0eF0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"TextureVertex"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglQuaternion</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/QuaternionProtocol.html\">QuaternionProtocol</a></code>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:4Cogl10QuaternionC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Quaternion"},"Classes/Matrix.html#/s:4Cogl6MatrixC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglMatrix</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MatrixProtocol.html\">MatrixProtocol</a></code>","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Matrix"},"Classes/Matrix.html#/s:4Cogl6MatrixC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Matrix"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglMaterialLayer</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerCyACSpySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerCyACSPySo01_abC0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerCyACSgSPySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerCyACSgSpySo01_abC0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC9retainingACSpySo01_abC0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerCyACxcAA0bC8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MaterialLayerProtocol.html\">MaterialLayerProtocol</a></code>","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC13opaquePointerACs06OpaqueE0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"MaterialLayer"},"Classes/MaterialLayer.html#/s:4Cogl13MaterialLayerC22retainingOpaquePointerACs0eF0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"MaterialLayer"},"Classes/Material.html#/s:4Cogl8MaterialC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglMaterial</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MaterialProtocol.html\">MaterialProtocol</a></code>","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Material"},"Classes/Material.html#/s:4Cogl8MaterialC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Material"},"Classes/Euler.html#/s:4Cogl5EulerC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglEuler</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/EulerProtocol.html\">EulerProtocol</a></code>","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Euler"},"Classes/Euler.html#/s:4Cogl5EulerC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Euler"},"Classes/Color.html#/s:4Cogl5ColorC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglColor</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ColorProtocol.html\">ColorProtocol</a></code>","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Color"},"Classes/Color.html#/s:4Cogl5ColorCACycfc":{"name":"init()","abstract":"<p>Creates a new (empty) color</p>","parent_name":"Color"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglOffscreen</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OffscreenProtocol.html\">OffscreenProtocol</a></code>","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC10to_textureACx_tcAA15TextureProtocolRzlufc":{"name":"init(to_texture:)","abstract":"<p>This creates an offscreen buffer object using the given <code>texture</code> as the","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC7textureACx_tcAA15TextureProtocolRzlufc":{"name":"init(texture:)","abstract":"<p>This creates an offscreen framebuffer object using the given","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC5newTo10to_textureACSgx_tAA15TextureProtocolRzlFZ":{"name":"newTo(to_texture:)","abstract":"<p>This creates an offscreen buffer object using the given <code>texture</code> as the","parent_name":"Offscreen"},"Classes/Offscreen.html#/s:4Cogl9OffscreenC7newWith7textureACSgx_tAA15TextureProtocolRzlFZ":{"name":"newWith(texture:)","abstract":"<p>This creates an offscreen framebuffer object using the given","parent_name":"Offscreen"},"Classes/Bitmap.html#/s:4Cogl6BitmapC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglBitmap</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/BitmapProtocol.html\">BitmapProtocol</a></code>","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC4fileACSPys4Int8VGSg_tKcfc":{"name":"init(file:)","abstract":"<p>Loads an image file from disk. This function can be safely called from","parent_name":"Bitmap"},"Classes/Bitmap.html#/s:4Cogl6BitmapC7newFrom4fileACSgSPys4Int8VGSg_tKFZ":{"name":"newFrom(file:)","abstract":"<p>Loads an image file from disk. This function can be safely called from","parent_name":"Bitmap"},"Classes/Texture.html#/s:4Cogl7TextureC3ptrSvSgvp":{"name":"ptr","abstract":"<pre class=\"highlight swift\"><code><span class=\"kt\">Untyped</span> <span class=\"n\">pointer</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">underlying</span> <span class=\"p\">`</span><span class=\"nv\">CoglTexture</span><span class=\"p\">`</span> <span class=\"n\">instance</span><span class=\"o\">.</span>","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureCyACSpySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureCyACSPySo01_aB0VGcfc":{"name":"init(_:)","abstract":"<p>Designated initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC8gpointerACSgSvSg_tcfc":{"name":"init(gpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gpointer</code> to","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC13gconstpointerACSgSVSg_tcfc":{"name":"init(gconstpointer:)","abstract":"<p>Optional initialiser from a non-mutating <code>gconstpointer</code> to","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureCyACSgSPySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from a constant pointer to the underlying <code>C</code> data type.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureCyACSgSpySo01_aB0VGSgcfc":{"name":"init(_:)","abstract":"<p>Optional initialiser from the underlying <code>C</code> data type.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC9retainingACSpySo01_aB0VG_tcfc":{"name":"init(retaining:)","abstract":"<p>Designated initialiser from the underlying <code>C</code> data type.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureCyACxcAA0B8ProtocolRzlufc":{"name":"init(_:)","abstract":"<p>Reference intialiser for a related type that implements <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TextureProtocol.html\">TextureProtocol</a></code>","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC8cPointerACSpyxG_tclufc":{"name":"init(cPointer:)","abstract":"<p>Unsafe typed initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC17retainingCPointerACSpyxG_tclufc":{"name":"init(retainingCPointer:)","abstract":"<p>Unsafe typed, retaining initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC3rawACSV_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC12retainingRawACSV_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC3rawACSv_tcfc":{"name":"init(raw:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC12retainingRawACSv_tcfc":{"name":"init(retainingRaw:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC13opaquePointerACs06OpaqueD0V_tcfc":{"name":"init(opaquePointer:)","abstract":"<p>Unsafe untyped initialiser.","parent_name":"Texture"},"Classes/Texture.html#/s:4Cogl7TextureC22retainingOpaquePointerACs0dE0V_tcfc":{"name":"init(retainingOpaquePointer:)","abstract":"<p>Unsafe untyped, retaining initialiser.","parent_name":"Texture"},"Classes/Texture.html":{"name":"Texture","abstract":"<p>The <code>Texture</code> type acts as an owner of an underlying <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Cogl0A7Texturea\">CoglTexture</a></code> instance."},"Classes/Bitmap.html":{"name":"Bitmap","abstract":"<p>The <code>Bitmap</code> type acts as an owner of an underlying <code>CoglBitmap</code> instance."},"Classes/Offscreen.html":{"name":"Offscreen","abstract":"<p>The <code>Offscreen</code> type acts as an owner of an underlying <code>CoglOffscreen</code> instance."},"Classes/Color.html":{"name":"Color","abstract":"<p>The <code>Color</code> type acts as an owner of an underlying <code>CoglColor</code> instance."},"Classes/Euler.html":{"name":"Euler","abstract":"<p>The <code>Euler</code> type acts as an owner of an underlying <code>CoglEuler</code> instance."},"Classes/Material.html":{"name":"Material","abstract":"<p>The <code>Material</code> type acts as an owner of an underlying <code>CoglMaterial</code> instance."},"Classes/MaterialLayer.html":{"name":"MaterialLayer","abstract":"<p>The <code>MaterialLayer</code> type acts as an owner of an underlying <code>CoglMaterialLayer</code> instance."},"Classes/Matrix.html":{"name":"Matrix","abstract":"<p>The <code>Matrix</code> type acts as an owner of an underlying <code>CoglMatrix</code> instance."},"Classes/Quaternion.html":{"name":"Quaternion","abstract":"<p>The <code>Quaternion</code> type acts as an owner of an underlying <code>CoglQuaternion</code> instance."},"Classes/TextureVertex.html":{"name":"TextureVertex","abstract":"<p>The <code>TextureVertex</code> type acts as an owner of an underlying <code>CoglTextureVertex</code> instance."},"Classes/_ColorSizeCheck.html":{"name":"_ColorSizeCheck","abstract":"<p>The <code>_ColorSizeCheck</code> type acts as an owner of an underlying <code>_CoglColorSizeCheck</code> instance."},"Classes/_MatrixSizeCheck.html":{"name":"_MatrixSizeCheck","abstract":"<p>The <code>_MatrixSizeCheck</code> type acts as an owner of an underlying <code>_CoglMatrixSizeCheck</code> instance."},"Classes/_TextureVertexSizeCheck.html":{"name":"_TextureVertexSizeCheck","abstract":"<p>The <code>_TextureVertexSizeCheck</code> type acts as an owner of an underlying <code>_CoglTextureVertexSizeCheck</code> instance."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}